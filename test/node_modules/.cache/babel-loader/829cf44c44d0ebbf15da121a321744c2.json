{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../../styles/Page.css';\nimport isEqual from 'lodash.isequal';\nimport Tabela from '../Tabela';\nimport ManagerTable from '../ManagerTable';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: 'First name',\n  accessor: 'first_name'\n}, {\n  Header: 'Last name',\n  accessor: 'last_name'\n}, {\n  Header: 'Title',\n  accessor: 'title'\n}, {\n  Header: 'Phone',\n  accessor: 'phone'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Contact method',\n  accessor: 'contact_method'\n}, {\n  Header: 'Company',\n  accessor: 'company'\n}, {\n  Header: 'Stage',\n  accessor: 'stage'\n}, {\n  Header: 'Employee',\n  accessor: 'name'\n}];\nconst managerColumns = [{\n  Header: 'Name',\n  accessor: 'name'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Role',\n  accessor: 'role'\n}, {\n  Header: 'Status',\n  accessor: 'status'\n}]; //[\n// {\n//     Header: 'Leads',\n//     columns: \n\nconst Dashboard = ({\n  api,\n  stages,\n  setStages,\n  contacts,\n  setContacts,\n  role,\n  staff,\n  setStaff\n}) => {\n  _s();\n\n  let table;\n  useEffect(() => {\n    if (role !== '') {\n      const apiToken = window.localStorage.getItem('api_token');\n      const staffId = window.localStorage.getItem('staff_id');\n\n      if (role !== 'manager') {\n        api.get(`/contacts/detailed`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, contacts)) {\n            setContacts(res.data.filter(e => e.staff_id === staffId));\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      } else {\n        api.get(`/staff`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, staff)) {\n            setStaff(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      }\n\n      api.get(`/stages`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, stages)) {\n          setStages(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n    }\n  }, [contacts, stages, staff]);\n\n  if (role !== '' && role === 'manager') {\n    table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n      columns: managerColumns,\n      data: staff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (role !== '' && role !== 'manager') {\n    table = /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","useMemo","isEqual","Tabela","ManagerTable","Link","employeeColumns","Header","accessor","managerColumns","Dashboard","api","stages","setStages","contacts","setContacts","role","staff","setStaff","table","apiToken","window","localStorage","getItem","staffId","get","headers","token","then","res","data","filter","e","staff_id","catch","error","console","log","response","message"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport '../../styles/Page.css'\r\nimport isEqual from 'lodash.isequal'\r\nimport Tabela from '../Tabela'\r\nimport ManagerTable from '../ManagerTable'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst employeeColumns = [\r\n                {\r\n                    Header: 'First name',\r\n                    accessor: 'first_name'\r\n                },\r\n                {\r\n                    Header: 'Last name',\r\n                    accessor: 'last_name'\r\n                },\r\n                {\r\n                    Header: 'Title',\r\n                    accessor: 'title'\r\n                },\r\n                {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone'\r\n                },\r\n                {\r\n                    Header: 'Email',\r\n                    accessor: 'email'\r\n                },\r\n                {\r\n                    Header: 'Contact method',\r\n                    accessor: 'contact_method'\r\n                },\r\n                {\r\n                    Header: 'Company',\r\n                    accessor: 'company'\r\n                },\r\n                {\r\n                    Header: 'Stage',\r\n                    accessor: 'stage'\r\n                },\r\n                {\r\n                    Header: 'Employee',\r\n                    accessor: 'name'\r\n                },\r\n            ]\r\n\r\nconst managerColumns = [\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Role',\r\n            accessor: 'role'\r\n        },\r\n        {\r\n            Header: 'Status',\r\n            accessor: 'status'\r\n        },\r\n    ]\r\n\r\n//[\r\n    // {\r\n    //     Header: 'Leads',\r\n    //     columns: \r\n\r\nconst Dashboard = ({api, stages, setStages, contacts, setContacts, role, staff, setStaff}) => {\r\n\r\n    let table;\r\n\r\n    useEffect(() => {\r\n        \r\n        if(role !== '') {\r\n            const apiToken = window.localStorage.getItem('api_token')\r\n            const staffId = window.localStorage.getItem('staff_id')\r\n\r\n            if(role !== 'manager') {\r\n                 \r\n                api.get(`/contacts/detailed`, {headers: {token: apiToken}}).then(res => {\r\n                    if(!isEqual(res.data, contacts)) {\r\n                        setContacts(res.data.filter((e)=> e.staff_id === staffId))\r\n                    }        \r\n                    }).catch(error => {\r\n                        console.log(error.response.data.message)\r\n                    })\r\n\r\n                } else {\r\n                    api.get(`/staff`, {headers: {token: apiToken}}).then(res => {\r\n                        if(!isEqual(res.data, staff)) {\r\n                            setStaff(res.data)\r\n                        }        \r\n                        }).catch(error => {\r\n                            console.log(error.response.data.message)\r\n                        })\r\n                }\r\n                api.get(`/stages`, {headers: {token: apiToken}}).then(res => {\r\n                    if(!isEqual(res.data, stages)) {\r\n                        setStages(res.data)\r\n                    }        \r\n                    }).catch(error => {\r\n                        console.log(error.response.data.message)\r\n                    })\r\n                    \r\n            }\r\n\r\n    },[contacts, stages, staff])\r\n\r\n    if(role !== '' && role === 'manager') {\r\n        table = <ManagerTable columns={managerColumns} data={staff}></ManagerTable>\r\n    }\r\n    if(role !== '' && role !== 'manager') {\r\n        table =  <Tabela columns={employeeColumns} data={contacts} />\r\n    }\r\n\r\n \r\n\r\n    return (\r\n        <div className='container'>\r\n            {table}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}