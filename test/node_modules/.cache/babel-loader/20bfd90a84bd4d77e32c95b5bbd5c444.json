{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\EditCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport \"../../styles/Page.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCompany = ({\n  api,\n  cities\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [contact, setContact] = useState();\n  const {\n    id\n  } = useParams();\n  const [company, setCompany] = useState();\n  const [companyName, setCompanyName] = useState();\n  const [address, setAddress] = useState();\n  const [address2, setAddress2] = useState();\n  const [website_url, setWebsiteUrl] = useState();\n  const [city_id, setCity] = useState();\n  useEffect(() => {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api.get(`/companies/${id}`, {\n      headers: {\n        token: apiToken\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (!isEqual(res.data[0], company)) {\n        setCompany(res.data[0]);\n        fillForm(res.data[0]);\n      }\n    }).catch(error => {\n      console.log(error);\n\n      if (error.response.status === 404) {\n        return alert(\"Company with this ID doesn't exist\");\n      }\n\n      console.log(error.response.data.message);\n    });\n  }, [api, company, id]);\n\n  const fillForm = data => {\n    setCompany(data.company);\n    setAddress(data.address);\n    setAddress2(data.address2);\n    setCity(data.city_id);\n    setWebsiteUrl(data.website_url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Company details: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"company-field\",\n        type: \"text\",\n        name: \"company\",\n        value: company,\n        onChange: e => {\n          setCompany(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"address\",\n        value: address,\n        onChange: e => {\n          setAddress(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Address 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"address2\",\n        value: address2,\n        onChange: e => {\n          setAddress2(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        name: \"city\",\n        value: city_id,\n        onChange: e => {\n          setCity(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.id,\n          children: city.city\n        }, city.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Website url:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"website-url\",\n        value: website_url,\n        onChange: e => {\n          setWebsiteUrl(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\" // onClick={}\n      ,\n      className: \"accept-button\",\n      children: \"Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCompany, \"TYz6zi434gNrKtRq5tSVMIN/E5U=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditCompany;\nexport default EditCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCompany\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/EditCompany.js"],"names":["React","useEffect","useState","isEqual","Form","Button","useParams","useHistory","EditCompany","api","cities","history","contact","setContact","id","company","setCompany","companyName","setCompanyName","address","setAddress","address2","setAddress2","website_url","setWebsiteUrl","city_id","setCity","apiToken","window","localStorage","getItem","get","headers","token","then","res","console","log","data","fillForm","catch","error","response","status","alert","message","e","target","value","map","city"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport \"../../styles/Page.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\nconst EditCompany = ({ api, cities }) => {\r\n  const history = useHistory();\r\n  const [contact, setContact] = useState();\r\n  const { id } = useParams();\r\n\r\n  const [company, setCompany] = useState();\r\n  const [companyName, setCompanyName] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [address2, setAddress2] = useState();\r\n  const [website_url, setWebsiteUrl] = useState();\r\n  const [city_id, setCity] = useState();\r\n\r\n  useEffect(() => {\r\n    const apiToken = window.localStorage.getItem(\"api_token\");\r\n    api\r\n      .get(`/companies/${id}`, { headers: { token: apiToken } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (!isEqual(res.data[0], company)) {\r\n          setCompany(res.data[0]);\r\n          fillForm(res.data[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error.response.status === 404) {\r\n          return alert(\"Company with this ID doesn't exist\");\r\n        }\r\n        console.log(error.response.data.message);\r\n      });\r\n  }, [api, company, id]);\r\n\r\n  const fillForm = (data) => {\r\n    setCompany(data.company);\r\n    setAddress(data.address);\r\n    setAddress2(data.address2);\r\n    setCity(data.city_id);\r\n    setWebsiteUrl(data.website_url);\r\n  };\r\n  return (\r\n    <div>\r\n      <h5>Company details: </h5>\r\n      <hr />\r\n      <div className=\"input-container\">\r\n        <p>Company:</p>\r\n        <Form.Control\r\n          id=\"company-field\"\r\n          type=\"text\"\r\n          name=\"company\"\r\n          value={company}\r\n          onChange={(e) => {\r\n            setCompany(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <p>Address:</p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"address\"\r\n          value={address}\r\n          onChange={(e) => {\r\n            setAddress(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <p>Address 2:</p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"address2\"\r\n          value={address2}\r\n          onChange={(e) => {\r\n            setAddress2(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <p>City:</p>\r\n        <Form.Control\r\n          as=\"select\"\r\n          name=\"city\"\r\n          value={city_id}\r\n          onChange={(e) => {\r\n            setCity(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\">Select city</option>\r\n          {cities.map((city) => (\r\n            <option key={city.id} value={city.id}>\r\n              {city.city}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <p>Website url:</p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"website-url\"\r\n          value={website_url}\r\n          onChange={(e) => {\r\n            setWebsiteUrl(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        // onClick={}\r\n        className=\"accept-button\"\r\n      >\r\n        Company\r\n      </Button>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCompany;\r\n"]},"metadata":{},"sourceType":"module"}