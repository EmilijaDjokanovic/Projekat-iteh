{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./Components/Header\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Pages/Login\";\nimport Dashboard from \"./Components/Pages/Dashboard\";\nimport NewLead from \"./Components/Pages/NewLead\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport RegisterUser from \"./Components/Pages/RegisterUser\";\nimport ManageEmployee from \"./Components/Pages/ManageEmployee\";\nimport isEqual from \"lodash.isequal\";\nimport EditContact from \"./Components/Pages/EditContact\";\nimport Companies from \"./Components/Pages/Companies\";\nimport EditCompany from \"./Components/Pages/EditCompany\";\nimport AddCompany from \"./Components/Pages/AddCompany\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api\"\n});\nconst timeApi = axios.create({\n  baseUrl: \"http://worldtimeapi.org/api\"\n});\n\nconst App = () => {\n  _s();\n\n  const [stages, setStages] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [companiesDetailed, setCompaniesDetailed] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [refresh, setRefresh] = useState(false);\n  const [refreshCompanies, setRefreshCompanies] = useState(false);\n  const [refreshContacts, setRefreshContacts] = useState(false);\n  const [refreshStaff, setRefreshStaff] = useState(false); // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const apiToken = window.localStorage.getItem(\"api_token\");\n  const staffId = window.localStorage.getItem(\"staff_id\");\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem(\"role\");\n    if (role !== storedRole && storedRole) setRole(storedRole);\n\n    if (role === \"manager\") {\n      setUserType(\"Manager view\");\n    } else if (role === \"sales\") {\n      setUserType(\"Employee view\");\n    } else {\n      setUserType(\"\");\n    }\n  }, [role]);\n  useEffect(() => {\n    if (role !== \"\") {\n      api.get(`/companies/detailed`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, companiesDetailed)) {\n          setCompaniesDetailed(res.data);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [apiToken, companiesDetailed, role, refreshCompanies]);\n  useEffect(() => {\n    if (role !== \"\") {\n      api.get(`/companies`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, companies)) {\n          setCompanies(res.data);\n        }\n      }).catch(error => {\n        if (error.response.status === 404) {\n          return alert(\"Can't retrieve companies\");\n        }\n      });\n    }\n  }, [apiToken, companies, role, refresh]);\n  useEffect(() => {\n    if (role === \"manager\") {\n      api.get(`/staff`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        res.data.map((staffMember, i) => {\n          res.data[i].deal_size = 0;\n        });\n        res.data.map((staffMember, i) => {\n          let totalDealSize = 0;\n          contacts.map(contact => {\n            if (contact.staff_id === staffMember.id) {\n              // console.log(contact.deal _size);\n              totalDealSize += contact.deal_size; // staff[i].deal_size = 0;\n            }\n          });\n          res.data[i].deal_size = totalDealSize;\n        });\n\n        if (!isEqual(res.data, staff)) {\n          setStaff(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n    }\n  }, [apiToken, contacts, role, staff, refreshStaff]);\n  useEffect(() => {\n    if (role !== \"\") {\n      setRefresh(false);\n      api.get(`/contacts/detailed`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, contacts)) {\n          setContacts(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n\n      if (!stages.length) {\n        api.get(`/stages`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, stages)) {\n            setStages(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      }\n\n      if (!cities.length) {\n        api.get(`/cities`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, cities)) {\n            setCities(res.data);\n          }\n        }).catch(error => {\n          if (error.response.status === 404) {\n            return alert(\"Can't retrieve cities\");\n          }\n        });\n      }\n    }\n  }, [role, contacts, stages, refreshContacts, cities, apiToken]);\n  let navbar;\n\n  if (role !== \"\") {\n    navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n      role: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userType: userType,\n        setRole: setRole,\n        setUserType: setUserType,\n        timeApi: timeApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), navbar, /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => {\n            return role !== \"\" || role !== null ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          render: () => /*#__PURE__*/_jsxDEV(Login, {\n            api: api,\n            setRole: setRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/Dashboard\",\n          component: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n            stages: stages,\n            setStages: setStages,\n            contacts: contacts,\n            setContacts: setContacts,\n            role: role,\n            staff: staff,\n            setStaff: setStaff\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/NewLead\",\n          component: () => /*#__PURE__*/_jsxDEV(NewLead, {\n            setContacts: setContacts,\n            stages: stages,\n            cities: cities,\n            setCities: setCities,\n            companies: companies,\n            setCompanies: setCompanies,\n            api: api,\n            setRefreshContacts: setRefreshContacts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/AddCompany\",\n          component: () => /*#__PURE__*/_jsxDEV(AddCompany, {\n            cities: cities,\n            setCities: setCities,\n            api: api,\n            setRefreshCompanies: setRefreshCompanies,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/Companies\",\n          component: () => /*#__PURE__*/_jsxDEV(Companies // stages={stages}\n          // setStages={setStages}\n          , {\n            companies: companies,\n            setCompanies: setCompanies,\n            companiesDetailed: companiesDetailed,\n            setCompaniesDetailed: setCompaniesDetailed // role={role}\n            ,\n            staff: staff // setStaff={setStaff}\n            ,\n            api: api\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/RegisterUser\",\n          component: () => /*#__PURE__*/_jsxDEV(RegisterUser, {\n            api: api,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/EditContact/:id\",\n          component: () => /*#__PURE__*/_jsxDEV(EditContact, {\n            contacts: contacts,\n            stages: stages,\n            cities: cities,\n            setCities: setCities,\n            setContacts: setContacts,\n            companies: companies,\n            setCompanies: setCompanies,\n            api: api,\n            setRefreshContacts: setRefreshContacts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/ManageEmployee/:id\",\n          component: () => /*#__PURE__*/_jsxDEV(ManageEmployee, {\n            contacts: contacts,\n            stages: stages,\n            setContacts: setContacts,\n            api: api,\n            setRefreshContatcs: setRefreshContacts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/EditCompany/:id\",\n          component: () => /*#__PURE__*/_jsxDEV(EditCompany, {\n            cities: cities,\n            api: api,\n            refresh: refresh,\n            setRefreshCompanies: setRefreshCompanies,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"tVv1DNkuhceTXLyIcjdDHgTJp0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/App.js"],"names":["React","useState","useEffect","axios","Header","BrowserRouter","Router","Redirect","Route","Switch","Navbar","Login","Dashboard","NewLead","PrivateRoute","RegisterUser","ManageEmployee","isEqual","EditContact","Companies","EditCompany","AddCompany","api","create","baseURL","timeApi","baseUrl","App","stages","setStages","cities","setCities","companies","setCompanies","companiesDetailed","setCompaniesDetailed","contacts","setContacts","staff","setStaff","role","setRole","userType","setUserType","refresh","setRefresh","refreshCompanies","setRefreshCompanies","refreshContacts","setRefreshContacts","refreshStaff","setRefreshStaff","apiToken","window","localStorage","getItem","staffId","storedRole","get","headers","token","then","res","data","catch","error","console","log","response","status","alert","map","staffMember","i","deal_size","totalDealSize","contact","staff_id","id","message","length","navbar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./Components/Header\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Pages/Login\";\nimport Dashboard from \"./Components/Pages/Dashboard\";\nimport NewLead from \"./Components/Pages/NewLead\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport RegisterUser from \"./Components/Pages/RegisterUser\";\nimport ManageEmployee from \"./Components/Pages/ManageEmployee\";\nimport isEqual from \"lodash.isequal\";\nimport EditContact from \"./Components/Pages/EditContact\";\nimport Companies from \"./Components/Pages/Companies\";\nimport EditCompany from \"./Components/Pages/EditCompany\";\nimport AddCompany from \"./Components/Pages/AddCompany\";\n\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api\",\n});\n\nconst timeApi = axios.create({\n  baseUrl: \"http://worldtimeapi.org/api\",\n});\n\nconst App = () => {\n  const [stages, setStages] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [companiesDetailed, setCompaniesDetailed] = useState([]);\n\n  const [contacts, setContacts] = useState([]);\n\n  const [staff, setStaff] = useState([]);\n\n  const [role, setRole] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [refresh, setRefresh] = useState(false);\n  const [refreshCompanies, setRefreshCompanies] = useState(false);\n  const [refreshContacts, setRefreshContacts] = useState(false);\n  const [refreshStaff, setRefreshStaff] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const apiToken = window.localStorage.getItem(\"api_token\");\n  const staffId = window.localStorage.getItem(\"staff_id\");\n\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem(\"role\");\n    if (role !== storedRole && storedRole) setRole(storedRole);\n    if (role === \"manager\") {\n      setUserType(\"Manager view\");\n    } else if (role === \"sales\") {\n      setUserType(\"Employee view\");\n    } else {\n      setUserType(\"\");\n    }\n  }, [role]);\n\n  useEffect(() => {\n    if (role !== \"\") {\n      api\n        .get(`/companies/detailed`, { headers: { token: apiToken } })\n        .then((res) => {\n          if (!isEqual(res.data, companiesDetailed)) {\n            setCompaniesDetailed(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [apiToken, companiesDetailed, role, refreshCompanies]);\n\n  useEffect(() => {\n    if (role !== \"\") {\n      api\n        .get(`/companies`, { headers: { token: apiToken } })\n        .then((res) => {\n          if (!isEqual(res.data, companies)) {\n            setCompanies(res.data);\n          }\n        })\n        .catch((error) => {\n          if (error.response.status === 404) {\n            return alert(\"Can't retrieve companies\");\n          }\n        });\n    }\n  }, [apiToken, companies, role, refresh]);\n\n  useEffect(() => {\n    if (role === \"manager\") {\n      api\n        .get(`/staff`, { headers: { token: apiToken } })\n        .then((res) => {\n          res.data.map((staffMember, i) => {\n            res.data[i].deal_size = 0;\n          });\n          res.data.map((staffMember, i) => {\n            let totalDealSize = 0;\n            contacts.map((contact) => {\n              if (contact.staff_id === staffMember.id) {\n                // console.log(contact.deal _size);\n                totalDealSize += contact.deal_size;\n                // staff[i].deal_size = 0;\n              }\n            });\n            res.data[i].deal_size = totalDealSize;\n          });\n\n          if (!isEqual(res.data, staff)) {\n            setStaff(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response.data.message);\n        });\n    }\n  }, [apiToken, contacts, role, staff, refreshStaff]);\n\n  useEffect(() => {\n    if (role !== \"\") {\n      setRefresh(false);\n\n      api\n        .get(`/contacts/detailed`, { headers: { token: apiToken } })\n        .then((res) => {\n          if (!isEqual(res.data, contacts)) {\n            setContacts(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response.data.message);\n        });\n\n      if (!stages.length) {\n        api\n          .get(`/stages`, { headers: { token: apiToken } })\n          .then((res) => {\n            if (!isEqual(res.data, stages)) {\n              setStages(res.data);\n            }\n          })\n          .catch((error) => {\n            console.log(error.response.data.message);\n          });\n      }\n      if (!cities.length) {\n        api\n          .get(`/cities`, { headers: { token: apiToken } })\n          .then((res) => {\n            if (!isEqual(res.data, cities)) {\n              setCities(res.data);\n            }\n          })\n          .catch((error) => {\n            if (error.response.status === 404) {\n              return alert(\"Can't retrieve cities\");\n            }\n          });\n      }\n    }\n  }, [role, contacts, stages, refreshContacts, cities, apiToken]);\n\n  let navbar;\n  if (role !== \"\") {\n    navbar = <Navbar role={role} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header\n          userType={userType}\n          setRole={setRole}\n          setUserType={setUserType}\n          timeApi={timeApi}\n        />\n        {navbar}\n        <Switch>\n          <Route\n            path=\"/\"\n            exact={true}\n            render={() => {\n              return role !== \"\" || role !== null ? (\n                <Redirect to=\"/Dashboard\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route\n            path=\"/Login\"\n            render={() => <Login api={api} setRole={setRole} />}\n          />\n          <PrivateRoute\n            path=\"/Dashboard\"\n            component={() => (\n              <Dashboard\n                stages={stages}\n                setStages={setStages}\n                contacts={contacts}\n                setContacts={setContacts}\n                role={role}\n                staff={staff}\n                setStaff={setStaff}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/NewLead\"\n            component={() => (\n              <NewLead\n                setContacts={setContacts}\n                stages={stages}\n                cities={cities}\n                setCities={setCities}\n                companies={companies}\n                setCompanies={setCompanies}\n                api={api}\n                setRefreshContacts={setRefreshContacts}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/AddCompany\"\n            component={() => (\n              <AddCompany\n                cities={cities}\n                setCities={setCities}\n                api={api}\n                setRefreshCompanies={setRefreshCompanies}\n                setRefresh={setRefresh}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/Companies\"\n            component={() => (\n              <Companies\n                // stages={stages}\n                // setStages={setStages}\n                companies={companies}\n                setCompanies={setCompanies}\n                companiesDetailed={companiesDetailed}\n                setCompaniesDetailed={setCompaniesDetailed}\n                // role={role}\n                staff={staff}\n                // setStaff={setStaff}\n                api={api}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/RegisterUser\"\n            component={() => <RegisterUser api={api} setRefresh={setRefresh} />}\n          />\n          <PrivateRoute\n            path=\"/EditContact/:id\"\n            component={() => (\n              <EditContact\n                contacts={contacts}\n                stages={stages}\n                cities={cities}\n                setCities={setCities}\n                setContacts={setContacts}\n                companies={companies}\n                setCompanies={setCompanies}\n                api={api}\n                setRefreshContacts={setRefreshContacts}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/ManageEmployee/:id\"\n            component={() => (\n              <ManageEmployee\n                contacts={contacts}\n                stages={stages}\n                setContacts={setContacts}\n                api={api}\n                setRefreshContatcs={setRefreshContacts}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/EditCompany/:id\"\n            component={() => (\n              <EditCompany\n                cities={cities}\n                api={api}\n                refresh={refresh}\n                setRefreshCompanies={setRefreshCompanies}\n                setRefresh={setRefresh}\n              />\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}