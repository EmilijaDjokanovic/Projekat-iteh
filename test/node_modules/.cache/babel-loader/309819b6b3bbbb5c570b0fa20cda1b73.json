{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../../styles/Page.css';\nimport isEqual from 'lodash.isequal';\nimport Tabela from '../Tabela';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: 'First name',\n  accessor: 'first_name'\n}, {\n  Header: 'Last name',\n  accessor: 'last_name'\n}, {\n  Header: 'Title',\n  accessor: 'title'\n}, {\n  Header: 'Phone',\n  accessor: 'phone'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Contact method',\n  accessor: 'contact_method'\n}, {\n  Header: 'Company',\n  accessor: 'company'\n}];\nconst managerColumns = [{\n  Header: 'First name',\n  accessor: 'first_name'\n}, {\n  Header: 'Last name',\n  accessor: 'last_name'\n}, {\n  Header: 'Title',\n  accessor: 'title'\n}, {\n  Header: 'Phone',\n  accessor: 'phone'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Contact method',\n  accessor: 'contact_method'\n}, {\n  Header: 'Company',\n  accessor: 'company'\n}]; //[\n// {\n//     Header: 'Leads',\n//     columns: \n\nconst Dashboard = ({\n  api,\n  stage,\n  setStage,\n  contacts,\n  setContacts,\n  role\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (role !== '') {\n      const apiToken = window.localStorage.getItem('api_token');\n\n      if (role !== 'manager') {\n        api.get(`/contacts`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, contacts)) {\n            setContacts(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      } else {\n        api.get(`/staff`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, contacts)) {\n            setContacts(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n        api.get(`/stages`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          if (!isEqual(res.data, stage)) {\n            setStage(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      }\n    }\n  }, [contacts, stage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","useMemo","isEqual","Tabela","employeeColumns","Header","accessor","managerColumns","Dashboard","api","stage","setStage","contacts","setContacts","role","apiToken","window","localStorage","getItem","get","headers","token","then","res","data","catch","error","console","log","response","message"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport '../../styles/Page.css'\r\nimport isEqual from 'lodash.isequal'\r\nimport Tabela from '../Tabela'\r\n\r\n\r\nconst employeeColumns = [\r\n                {\r\n                    Header: 'First name',\r\n                    accessor: 'first_name'\r\n                },\r\n                {\r\n                    Header: 'Last name',\r\n                    accessor: 'last_name'\r\n                },\r\n                {\r\n                    Header: 'Title',\r\n                    accessor: 'title'\r\n                },\r\n                {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone'\r\n                },\r\n                {\r\n                    Header: 'Email',\r\n                    accessor: 'email'\r\n                },\r\n                {\r\n                    Header: 'Contact method',\r\n                    accessor: 'contact_method'\r\n                },\r\n                {\r\n                    Header: 'Company',\r\n                    accessor: 'company'\r\n                },\r\n            ]\r\n\r\nconst managerColumns = [\r\n        {\r\n            Header: 'First name',\r\n            accessor: 'first_name'\r\n        },\r\n        {\r\n            Header: 'Last name',\r\n            accessor: 'last_name'\r\n        },\r\n        {\r\n            Header: 'Title',\r\n            accessor: 'title'\r\n        },\r\n        {\r\n            Header: 'Phone',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Contact method',\r\n            accessor: 'contact_method'\r\n        },\r\n        {\r\n            Header: 'Company',\r\n            accessor: 'company'\r\n        },\r\n    ]\r\n\r\n//[\r\n    // {\r\n    //     Header: 'Leads',\r\n    //     columns: \r\n\r\nconst Dashboard = ({api, stage, setStage, contacts, setContacts, role}) => {\r\n\r\n    useEffect(() => {\r\n        if(role !== '') {\r\n            const apiToken = window.localStorage.getItem('api_token')\r\n\r\n\r\n            if(role !== 'manager') {\r\n                 \r\n                api.get(`/contacts`, {headers: {token: apiToken}}).then(res => {\r\n                    if(!isEqual(res.data, contacts)) {\r\n                        setContacts(res.data)\r\n                    }        \r\n                    }).catch(error => {\r\n                        console.log(error.response.data.message)\r\n                    })\r\n\r\n                } else {\r\n\r\n                    api.get(`/staff`, {headers: {token: apiToken}}).then(res => {\r\n                        if(!isEqual(res.data, contacts)) {\r\n                            setContacts(res.data)\r\n                        }        \r\n                        }).catch(error => {\r\n                            console.log(error.response.data.message)\r\n                        })\r\n\r\n                    api.get(`/stages`, {headers: {token: apiToken}}).then(res => {\r\n                        if(!isEqual(res.data, stage)) {\r\n                            setStage(res.data)\r\n                        }        \r\n                        }).catch(error => {\r\n                            console.log(error.response.data.message)\r\n                        })\r\n                    }\r\n            }\r\n    },[contacts, stage])\r\n\r\n \r\n\r\n    return (\r\n        <div className='container'>\r\n            {/* {(contacts.length) ? contacts[0].first_name : ''} */}\r\n            <Tabela columns={employeeColumns} data={contacts} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}