{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Companies.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport isEqual from \"lodash.isequal\";\nimport { numberFormat } from \"../NumberFormat\";\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, VerticalBarSeries } from \"react-vis\";\nimport \"../../../node_modules/react-vis/dist/style.css\";\nimport ManagerTable from \"../ManagerTable\";\nimport TextColumnFilter from \"../TextColumnFilter\";\nimport DateColumnFilter from \"../DateColumnFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companyColumns = [{\n  Header: \"Name\",\n  accessor: \"company\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Address\",\n  accessor: \"address\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Address2\",\n  accessor: \"address2\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Website\",\n  accessor: \"website_url\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"City\",\n  accessor: \"company_city\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Company Deal Size\",\n  accessor: \"company_deal_size\",\n  Cell: ({\n    value\n  }) => {\n    if (value !== undefined) return numberFormat(value);\n    return \"\";\n  },\n  Filter: DateColumnFilter\n}, {\n  Header: \"\",\n  accessor: \"id\",\n  Cell: ({\n    value\n  }) => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/EditCompany/${value}`,\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 26\n  }, this),\n  disableSortBy: true,\n  Filter: DateColumnFilter\n}];\n\nconst Companies = ({\n  companies,\n  setCompanies,\n  staff,\n  api,\n  companiesDetailed,\n  setCompaniesDetailed\n}) => {\n  let table;\n  const chartData = companiesDetailed.map((c, i) => {\n    let object = {\n      x: c.company,\n      y: c.company_deal_size\n    };\n    return object;\n  });\n  console.log(chartData);\n  table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n    columns: companyColumns,\n    data: companiesDetailed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        margin: {\n          left: 250,\n          bottom: 150\n        },\n        xType: \"ordinal\",\n        width: 1000,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          tickLabelAngle: -45\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), table]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Companies;\nexport default Companies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Companies.js"],"names":["React","useState","useEffect","Link","isEqual","numberFormat","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","VerticalBarSeries","ManagerTable","TextColumnFilter","DateColumnFilter","companyColumns","Header","accessor","Filter","Cell","value","undefined","disableSortBy","Companies","companies","setCompanies","staff","api","companiesDetailed","setCompaniesDetailed","table","chartData","map","c","i","object","x","company","y","company_deal_size","console","log","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport { numberFormat } from \"../NumberFormat\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n} from \"react-vis\";\r\nimport \"../../../node_modules/react-vis/dist/style.css\";\r\n\r\nimport ManagerTable from \"../ManagerTable\";\r\nimport TextColumnFilter from \"../TextColumnFilter\";\r\nimport DateColumnFilter from \"../DateColumnFilter\";\r\n\r\nconst companyColumns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"company\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Address\",\r\n    accessor: \"address\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Address2\",\r\n    accessor: \"address2\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Website\",\r\n    accessor: \"website_url\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"City\",\r\n    accessor: \"company_city\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Company Deal Size\",\r\n    accessor: \"company_deal_size\",\r\n    Cell: ({ value }) => {\r\n      if (value !== undefined) return numberFormat(value);\r\n      return \"\";\r\n    },\r\n    Filter: DateColumnFilter,\r\n  },\r\n  {\r\n    Header: \"\",\r\n    accessor: \"id\",\r\n    Cell: ({ value }) => <Link to={`/EditCompany/${value}`}>Edit</Link>,\r\n    disableSortBy: true,\r\n    Filter: DateColumnFilter,\r\n  },\r\n];\r\n\r\nconst Companies = ({\r\n  companies,\r\n  setCompanies,\r\n  staff,\r\n  api,\r\n  companiesDetailed,\r\n  setCompaniesDetailed,\r\n}) => {\r\n  let table;\r\n\r\n  const chartData = companiesDetailed.map((c, i) => {\r\n    let object = {\r\n      x: c.company,\r\n      y: c.company_deal_size,\r\n    };\r\n    return object;\r\n  });\r\n\r\n  console.log(chartData);\r\n\r\n  table = (\r\n    <ManagerTable\r\n      columns={companyColumns}\r\n      data={companiesDetailed}\r\n    ></ManagerTable>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <XYPlot\r\n          margin={{ left: 250, bottom: 150 }}\r\n          xType=\"ordinal\"\r\n          width={1000}\r\n          height={300}\r\n        >\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis tickLabelAngle={-45} />\r\n          <YAxis />\r\n          <VerticalBarSeries data={chartData} />\r\n        </XYPlot>\r\n      </div>\r\n      {table}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n"]},"metadata":{},"sourceType":"module"}