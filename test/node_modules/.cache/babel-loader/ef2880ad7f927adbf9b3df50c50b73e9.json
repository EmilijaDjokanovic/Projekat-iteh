{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\SelectColumnFilter.js\";\nimport React, { useMemo } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectColumnFilter = ({\n  column,\n  stages\n}) => {\n  const {\n    filterValue,\n    setFilter\n  } = column; // const options = useMemo(() => {\n  //     const options = new Set()\n  //     preFilteredRows.forEach(row => {\n  //         options.add(row.values[id])\n  //     })\n  // }, [id, preFilteredRows])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n      as: \"select\",\n      name: \"stage\",\n      value: filterValue,\n      onChange: e => {\n        setFilter(e.target.value || undefined);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-Select a stage-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), stages.map((stage, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: stage.stage,\n        children: stage.stage\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)), console.log(stages)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SelectColumnFilter;\nexport default SelectColumnFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectColumnFilter\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/SelectColumnFilter.js"],"names":["React","useMemo","Form","SelectColumnFilter","column","stages","filterValue","setFilter","e","target","value","undefined","map","stage","i","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAC7C,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA2BH,MAAjC,CAD6C,CAE7C;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAA,2BACI,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAEE,WAHX;AAGwB,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAACD,QAAAA,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBC,SAAnB,CAAT;AAAuC,OAHjF;AAAA,8BAMI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOQN,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACP;AAAgB,QAAA,KAAK,EAAED,KAAK,CAACA,KAA7B;AAAA,kBAAqCA,KAAK,CAACA;AAA3C,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,cADJ,CAPR,EAUSC,OAAO,CAACC,GAAR,CAAYX,MAAZ,CAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA1BD;;KAAMF,kB;AA4BN,eAAeA,kBAAf","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst SelectColumnFilter = ({column, stages}) => {\r\n    const {filterValue, setFilter} = column\r\n    // const options = useMemo(() => {\r\n    //     const options = new Set()\r\n    //     preFilteredRows.forEach(row => {\r\n    //         options.add(row.values[id])\r\n    //     })\r\n        \r\n    // }, [id, preFilteredRows])\r\n\r\n    return (\r\n        <div>\r\n            <Form.Control \r\n                as=\"select\" \r\n                name=\"stage\"\r\n                value={filterValue} onChange={(e) => {setFilter(e.target.value || undefined)}}\r\n                \r\n            >   \r\n                <option value=''>-Select a stage-</option>\r\n                   {stages.map((stage, i) => (\r\n                        <option key={i} value={stage.stage}>{stage.stage}</option>\r\n                    ))}\r\n                    {console.log(stages)}\r\n            </Form.Control>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectColumnFilter\r\n"]},"metadata":{},"sourceType":"module"}