{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useMemo, Component } from \"react\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './Components/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Components/Navbar';\nimport Login from './Components/Pages/Login';\nimport Dashboard from './Components/Pages/Dashboard';\nimport NewLead from './Components/Pages/NewLead';\nimport SearchLeads from './Components/Pages/SearchLeads';\nimport Home from './Components/Pages/Home';\nimport Contact from './Components/Pages/Contact';\nimport PrivateRoute from './Components/PrivateRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\nconst App = () => {\n  _s();\n\n  const [role, setRole] = useState('');\n  const [userType, setUserType] = useState('');\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem('role');\n    if (role !== storedRole && storedRole) setRole(storedRole);\n\n    if (role === 'manager') {\n      setUserType('Manager view');\n    } else if (role === 'sales') {\n      setUserType('Employee view');\n    }\n  }, [role]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userType: userType,\n        setRole: setRole,\n        setUserType: setUserType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          render: () => /*#__PURE__*/_jsxDEV(Login, {\n            api: api,\n            setRole: setRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/Dashboard\",\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/NewLead\",\n          component: NewLead\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/SearchLeads\",\n          component: SearchLeads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"A9ipuiY2UT6FVD3GIciiGtiasxY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/App.js"],"names":["React","useState","useEffect","useMemo","Component","axios","Header","BrowserRouter","Router","Route","Switch","Navbar","Login","Dashboard","NewLead","SearchLeads","Home","Contact","PrivateRoute","api","create","baseURL","App","role","setRole","userType","setUserType","storedRole","window","localStorage","getItem"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useMemo, Component } from \"react\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './Components/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './Components/Navbar';\nimport Login from './Components/Pages/Login'\nimport Dashboard from './Components/Pages/Dashboard'\nimport NewLead from './Components/Pages/NewLead'\nimport SearchLeads from './Components/Pages/SearchLeads'\nimport Home from './Components/Pages/Home'\nimport Contact from './Components/Pages/Contact';\nimport PrivateRoute from './Components/PrivateRoute';\n\n\nconst api = axios.create({\n  baseURL:'http://127.0.0.1:8000/api'\n})\n\nconst App = () => {\n  const [role, setRole] = useState('')\n  const [userType, setUserType] = useState('')\n\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem('role')\n    if(role !== storedRole && storedRole)\n      setRole(storedRole)\n      if(role === 'manager') {\n        setUserType('Manager view')\n      } else if(role === 'sales'){\n        setUserType('Employee view')\n      }\n  }, [role])\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <Header userType={userType} setRole={setRole} setUserType={setUserType}/>\n      <Navbar />\n      {/* {this.state.contacts.map(contact => <h2 key=\"contact.id\">{contact.first_name}</h2>)} */}\n      <Switch>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/Login\" render={() => <Login api={api} setRole={setRole}/>} />\n        <PrivateRoute path=\"/Dashboard\" component={Dashboard} />\n        <PrivateRoute path=\"/NewLead\" component={NewLead} />\n        <PrivateRoute path=\"/SearchLeads\" component={SearchLeads} />\n      </Switch>\n    </Router>\n  </div>\n  )\n}\n\nexport default App\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}