{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/Page.css\";\nimport \"../../styles/Dashboard.css\";\nimport isEqual from \"lodash.isequal\";\nimport Tabela from \"../Tabela\";\nimport ManagerTable from \"../ManagerTable\";\nimport { Link } from \"react-router-dom\";\nimport TextColumnFilter from \"../TextColumnFilter\";\nimport DateColumnFilter from \"../DateColumnFilter\";\nimport SelectStageColumnFilter from \"../SelectStageColumnFilter\";\nimport SelectContactColumnFilter from \"../SelectContactColumnFilter\";\nimport { FunnelChart } from \"react-funnel-pipeline\";\nimport \"react-funnel-pipeline/dist/index.css\";\nimport { DateTime } from \"luxon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { numberFormat } from \"../NumberFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-placeholder\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this),\n  accessor: \"stage\",\n  disableSortBy: true,\n  Cell: ({\n    value\n  }) => \"\",\n  Filter: SelectStageColumnFilter\n}, {\n  Header: \"First name\",\n  accessor: \"first_name\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Last name\",\n  accessor: \"last_name\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Title\",\n  accessor: \"title\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Phone\",\n  accessor: \"phone\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Email\",\n  accessor: \"email\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Contact method\",\n  accessor: \"contact_method\",\n  Filter: SelectContactColumnFilter\n}, {\n  Header: \"Company\",\n  accessor: \"company\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Deal size\",\n  accessor: \"deal_size\",\n  Cell: ({\n    value\n  }) => numberFormat(value),\n  Filter: DateColumnFilter\n}, {\n  Header: \"Follow Up Date\",\n  accessor: \"follow_up_date\",\n  Cell: ({\n    value\n  }) => {\n    const date = DateTime.fromFormat(value, \"yyyy-MM-dd\").toFormat(\"MM/dd/yyyy\");\n\n    if (date === \"Invalid DateTime\") {\n      return \"/\";\n    }\n\n    return date;\n  },\n  Filter: DateColumnFilter\n}, {\n  Header: \"\",\n  accessor: \"id\",\n  Cell: ({\n    value\n  }) => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/EditContact/${value}`,\n    children: \"Details\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 26\n  }, this),\n  disableSortBy: true,\n  Filter: DateColumnFilter\n}];\nconst managerColumns = [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Email\",\n  accessor: \"email\"\n}, {\n  Header: \"Role\",\n  accessor: \"role\"\n}, {\n  Header: \"Status\",\n  accessor: \"status\",\n  Cell: ({\n    value\n  }) => {\n    if (value === 1) return \"Active\";\n    return \"Inactive\";\n  }\n}, {\n  Header: \"Total deal size\",\n  accessor: \"deal_size\",\n  Cell: ({\n    value\n  }) => {\n    if (value !== undefined) return numberFormat(value);\n    return \"\";\n  }\n}, {\n  Header: \"\",\n  accessor: \"id\",\n  Cell: ({\n    value\n  }) => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/ManageEmployee/${value}`,\n    children: \"Manage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 26\n  }, this),\n  disableSortBy: true\n}];\n\nconst Dashboard = ({\n  stages,\n  contacts,\n  role,\n  staff,\n  setStaff\n}) => {\n  _s();\n\n  const [staffContacts, setStaffContacts] = useState([]);\n  let table;\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    if (role !== \"\" && role === \"sales\") {\n      const staffId = window.localStorage.getItem(\"staff_id\");\n      let filter = contacts.filter(item => item.contact_staff_id === parseInt(staffId));\n\n      if (!isEqual(filter, staffContacts)) {\n        const data = filter.reduce((acumulator, currentValue) => {\n          const oldValue = acumulator[currentValue.stage] || 0;\n          return { ...acumulator,\n            [currentValue.stage]: oldValue + currentValue.deal_size\n          };\n        }, {});\n        const chartDataArray = Object.keys(data).map(key => ({\n          name: key,\n          value: data[key]\n        })); //  console.log(chartDataArray);\n\n        setChartData(chartDataArray);\n        setStaffContacts(filter);\n      }\n    } else if (role === \"manager\") {\n      //nadji sve idjeve podredjenih trenutnom menadzeru\n      const staffId = JSON.parse(localStorage.getItem(\"staff_id\"));\n      let managerStaffIds = [];\n      let index = 0;\n      staff.forEach(member => {\n        if (staffId === member.manager_id) {\n          managerStaffIds[index] = member.id;\n          index++;\n        }\n      });\n      console.log(managerStaffIds); //nadji sve kontakte podredjenih\n\n      let currentManagerContacts = [];\n      index = 0;\n      contacts.forEach(c => {\n        console.log(c);\n\n        if (managerStaffIds.includes(c.staff_id)) {\n          currentManagerContacts[index] = c;\n          index++;\n          console.log(c);\n        }\n      }); //data za funel chart\n\n      const data = currentManagerContacts.reduce((acumulator, currentValue) => {\n        const oldValue = acumulator[currentValue.stage] || 0;\n        return { ...acumulator,\n          [currentValue.stage]: oldValue + currentValue.deal_size\n        };\n      }, {}); //console.log(data);\n\n      const chartDataArray = Object.keys(data).map(key => ({\n        name: key,\n        value: data[key]\n      })); // console.log(contacts);\n\n      if (!isEqual(chartData, chartDataArray)) setChartData(chartDataArray);\n    }\n  }, [chartData, contacts, role, staff, staffContacts, stages]);\n\n  if (role !== \"\" && role === \"manager\") {\n    const staffId = JSON.parse(localStorage.getItem(\"staff_id\"));\n    let managerStaff = [];\n    let index = 0;\n    staff.forEach(member => {\n      if (staffId === member.manager_id) {\n        managerStaff[index] = member;\n        index++;\n      }\n    });\n    table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n      columns: managerColumns,\n      data: managerStaff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (role !== \"\" && role !== \"manager\") {\n    table = /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: staffContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"My Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"funnel-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Pipeline By Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n        data: chartData,\n        className: \"funnel-chart\",\n        showRunningTotal: false,\n        chartWidth: 400,\n        chartHeight: 300,\n        heightRelativeToValue: true,\n        pallette: [\"#95db93\", \"#93dbd5\", \"#967ceb\", \"#93aadb\"],\n        pallete: row => {\n          if (row.name.contains(\"1.\")) return \"#95db93\";\n          if (row.name.contains(\"2.\")) return \"#93dbd5\";\n          if (row.name.contains(\"3.\")) return \"#967ceb\";\n          if (row.name.contains(\"4.\")) return \"#93aadb\";\n        },\n        showNames: false,\n        showValues: false,\n        getToolTip: row => row.name + \"\\n\" + numberFormat(row.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), \"1. Prospect (10%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), \"2. Forecast (50%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), \"3. Forecast (80%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), \"4. Won/Closed (100%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), table]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"rh1nNneKO16xrXk7jjnztDweIho=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","isEqual","Tabela","ManagerTable","Link","TextColumnFilter","DateColumnFilter","SelectStageColumnFilter","SelectContactColumnFilter","FunnelChart","DateTime","FontAwesomeIcon","faCircle","numberFormat","employeeColumns","Header","accessor","disableSortBy","Cell","value","Filter","date","fromFormat","toFormat","managerColumns","undefined","Dashboard","stages","contacts","role","staff","setStaff","staffContacts","setStaffContacts","table","chartData","setChartData","staffId","window","localStorage","getItem","filter","item","contact_staff_id","parseInt","data","reduce","acumulator","currentValue","oldValue","stage","deal_size","chartDataArray","Object","keys","map","key","name","JSON","parse","managerStaffIds","index","forEach","member","manager_id","id","console","log","currentManagerContacts","c","includes","staff_id","managerStaff","row","contains"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/Page.css\";\r\nimport \"../../styles/Dashboard.css\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport Tabela from \"../Tabela\";\r\nimport ManagerTable from \"../ManagerTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextColumnFilter from \"../TextColumnFilter\";\r\nimport DateColumnFilter from \"../DateColumnFilter\";\r\nimport SelectStageColumnFilter from \"../SelectStageColumnFilter\";\r\nimport SelectContactColumnFilter from \"../SelectContactColumnFilter\";\r\nimport { FunnelChart } from \"react-funnel-pipeline\";\r\nimport \"react-funnel-pipeline/dist/index.css\";\r\nimport { DateTime } from \"luxon\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { numberFormat } from \"../NumberFormat\";\r\n\r\nconst employeeColumns = [\r\n  {\r\n    Header: <div className=\"header-placeholder\"></div>,\r\n    accessor: \"stage\",\r\n    disableSortBy: true,\r\n    Cell: ({ value }) => \"\",\r\n    Filter: SelectStageColumnFilter,\r\n  },\r\n  {\r\n    Header: \"First name\",\r\n    accessor: \"first_name\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Last name\",\r\n    accessor: \"last_name\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Title\",\r\n    accessor: \"title\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Phone\",\r\n    accessor: \"phone\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Email\",\r\n    accessor: \"email\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Contact method\",\r\n    accessor: \"contact_method\",\r\n    Filter: SelectContactColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Company\",\r\n    accessor: \"company\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Deal size\",\r\n    accessor: \"deal_size\",\r\n    Cell: ({ value }) => numberFormat(value),\r\n    Filter: DateColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Follow Up Date\",\r\n    accessor: \"follow_up_date\",\r\n    Cell: ({ value }) => {\r\n      const date = DateTime.fromFormat(value, \"yyyy-MM-dd\").toFormat(\r\n        \"MM/dd/yyyy\"\r\n      );\r\n      if (date === \"Invalid DateTime\") {\r\n        return \"/\";\r\n      }\r\n      return date;\r\n    },\r\n\r\n    Filter: DateColumnFilter,\r\n  },\r\n  {\r\n    Header: \"\",\r\n    accessor: \"id\",\r\n    Cell: ({ value }) => <Link to={`/EditContact/${value}`}>Details</Link>,\r\n    disableSortBy: true,\r\n    Filter: DateColumnFilter,\r\n  },\r\n];\r\n\r\nconst managerColumns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\",\r\n  },\r\n  {\r\n    Header: \"Email\",\r\n    accessor: \"email\",\r\n  },\r\n  {\r\n    Header: \"Role\",\r\n    accessor: \"role\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n    Cell: ({ value }) => {\r\n      if (value === 1) return \"Active\";\r\n      return \"Inactive\";\r\n    },\r\n  },\r\n  {\r\n    Header: \"Total deal size\",\r\n    accessor: \"deal_size\",\r\n    Cell: ({ value }) => {\r\n      if (value !== undefined) return numberFormat(value);\r\n      return \"\";\r\n    },\r\n  },\r\n  {\r\n    Header: \"\",\r\n    accessor: \"id\",\r\n    Cell: ({ value }) => <Link to={`/ManageEmployee/${value}`}>Manage</Link>,\r\n    disableSortBy: true,\r\n  },\r\n];\r\n\r\nconst Dashboard = ({ stages, contacts, role, staff, setStaff }) => {\r\n  const [staffContacts, setStaffContacts] = useState([]);\r\n\r\n  let table;\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (role !== \"\" && role === \"sales\") {\r\n      const staffId = window.localStorage.getItem(\"staff_id\");\r\n      let filter = contacts.filter(\r\n        (item) => item.contact_staff_id === parseInt(staffId)\r\n      );\r\n      if (!isEqual(filter, staffContacts)) {\r\n        const data = filter.reduce((acumulator, currentValue) => {\r\n          const oldValue = acumulator[currentValue.stage] || 0;\r\n\r\n          return {\r\n            ...acumulator,\r\n            [currentValue.stage]: oldValue + currentValue.deal_size,\r\n          };\r\n        }, {});\r\n\r\n        const chartDataArray = Object.keys(data).map((key) => ({\r\n          name: key,\r\n          value: data[key],\r\n        }));\r\n        //  console.log(chartDataArray);\r\n        setChartData(chartDataArray);\r\n        setStaffContacts(filter);\r\n      }\r\n    } else if (role === \"manager\") {\r\n      //nadji sve idjeve podredjenih trenutnom menadzeru\r\n      const staffId = JSON.parse(localStorage.getItem(\"staff_id\"));\r\n      let managerStaffIds = [];\r\n      let index = 0;\r\n      staff.forEach((member) => {\r\n        if (staffId === member.manager_id) {\r\n          managerStaffIds[index] = member.id;\r\n          index++;\r\n        }\r\n      });\r\n      console.log(managerStaffIds);\r\n      //nadji sve kontakte podredjenih\r\n      let currentManagerContacts = [];\r\n      index = 0;\r\n      contacts.forEach((c) => {\r\n        console.log(c);\r\n        if (managerStaffIds.includes(c.staff_id)) {\r\n          currentManagerContacts[index] = c;\r\n          index++;\r\n          console.log(c);\r\n        }\r\n      });\r\n      //data za funel chart\r\n      const data = currentManagerContacts.reduce((acumulator, currentValue) => {\r\n        const oldValue = acumulator[currentValue.stage] || 0;\r\n        return {\r\n          ...acumulator,\r\n          [currentValue.stage]: oldValue + currentValue.deal_size,\r\n        };\r\n      }, {});\r\n      //console.log(data);\r\n      const chartDataArray = Object.keys(data).map((key) => ({\r\n        name: key,\r\n        value: data[key],\r\n      }));\r\n      // console.log(contacts);\r\n      if (!isEqual(chartData, chartDataArray)) setChartData(chartDataArray);\r\n    }\r\n  }, [chartData, contacts, role, staff, staffContacts, stages]);\r\n\r\n  if (role !== \"\" && role === \"manager\") {\r\n    const staffId = JSON.parse(localStorage.getItem(\"staff_id\"));\r\n    let managerStaff = [];\r\n    let index = 0;\r\n    staff.forEach((member) => {\r\n      if (staffId === member.manager_id) {\r\n        managerStaff[index] = member;\r\n        index++;\r\n      }\r\n    });\r\n    table = (\r\n      <ManagerTable columns={managerColumns} data={managerStaff}></ManagerTable>\r\n    );\r\n  }\r\n  if (role !== \"\" && role !== \"manager\") {\r\n    table = <Tabela columns={employeeColumns} data={staffContacts} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h5>My Pipeline</h5>\r\n      <div className=\"funnel-chart-container\">\r\n        <h5>Pipeline By Stage</h5>\r\n        <FunnelChart\r\n          data={chartData}\r\n          className=\"funnel-chart\"\r\n          showRunningTotal={false}\r\n          chartWidth={400}\r\n          chartHeight={300}\r\n          heightRelativeToValue={true}\r\n          pallette={[\"#95db93\", \"#93dbd5\", \"#967ceb\", \"#93aadb\"]}\r\n          pallete={(row) => {\r\n            if (row.name.contains(\"1.\")) return \"#95db93\";\r\n            if (row.name.contains(\"2.\")) return \"#93dbd5\";\r\n            if (row.name.contains(\"3.\")) return \"#967ceb\";\r\n            if (row.name.contains(\"4.\")) return \"#93aadb\";\r\n          }}\r\n          showNames={false}\r\n          showValues={false}\r\n          getToolTip={(row) => row.name + \"\\n\" + numberFormat(row.value)}\r\n        />\r\n        <div className=\"chart-legend\">\r\n          <h5>Stage</h5>\r\n\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-1\"\r\n            ></FontAwesomeIcon>\r\n            1. Prospect (10%)\r\n          </p>\r\n\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-2\"\r\n            ></FontAwesomeIcon>\r\n            2. Forecast (50%)\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-3\"\r\n            ></FontAwesomeIcon>\r\n            3. Forecast (80%)\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-4\"\r\n            ></FontAwesomeIcon>\r\n            4. Won/Closed (100%)\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {table}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}