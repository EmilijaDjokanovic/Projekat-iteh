{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\DateColumnFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateColumnFilter = ({\n  column\n}) => {\n  _s();\n\n  const {\n    filterValue,\n    setFilter,\n    preFilteredRows\n  } = column;\n  const [dateFrom, setDateFrom] = useState('');\n  const [dateTo, setDateTo] = useState('');\n  useEffect(() => {\n    console.log(dateTo);\n    console.log(dateFrom);\n    const newDateTo = DateTime.fromFormat(dateTo, 'yyyy-MM-dd').toMillis();\n    console.log(newDateTo);\n    const newDateFrom = DateTime.fromFormat(dateFrom, 'yyyy-MM-dd').toMillis();\n    console.log(newDateFrom);\n\n    if (newDateFrom && newDateTo) {\n      setFilter([newDateFrom, newDateTo]);\n    } else if (newDateFrom) {\n      setFilter([newDateFrom, Date.now()]);\n    } else if (newDateTo) {\n      setFilter([0, newDateTo]);\n    }\n  }, [dateFrom, dateTo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"date\",\n      name: \"date-from\",\n      value: dateFrom,\n      onChange: e => {\n        //      setDateFrom(DateTime.fromFormat(e.target.value, 'yyyy-MM-dd').toMillis())\n        setDateFrom(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"date\",\n      name: \"date-to\",\n      value: dateTo,\n      onChange: e => {\n        //    setDateTo(DateTime.fromFormat(e.target.value, 'yyyy-MM-dd').toMillis())\n        setDateTo(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DateColumnFilter, \"XBx8Buaspg0ITHPFuHfpuhB+hus=\");\n\n_c = DateColumnFilter;\nexport default DateColumnFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateColumnFilter\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/DateColumnFilter.js"],"names":["React","useState","useEffect","Form","DateTime","DateColumnFilter","column","filterValue","setFilter","preFilteredRows","dateFrom","setDateFrom","dateTo","setDateTo","console","log","newDateTo","fromFormat","toMillis","newDateFrom","Date","now","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACnC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAA4CH,MAAlD;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,UAAMM,SAAS,GAAGZ,QAAQ,CAACa,UAAT,CAAoBL,MAApB,EAA4B,YAA5B,EAA0CM,QAA1C,EAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,UAAMG,WAAW,GAAGf,QAAQ,CAACa,UAAT,CAAoBP,QAApB,EAA8B,YAA9B,EAA4CQ,QAA5C,EAApB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ;;AAEA,QAAGA,WAAW,IAAIH,SAAlB,EAA6B;AACzBR,MAAAA,SAAS,CAAC,CAACW,WAAD,EAAcH,SAAd,CAAD,CAAT;AACH,KAFD,MAEO,IAAIG,WAAJ,EAAgB;AACnBX,MAAAA,SAAS,CAAC,CAACW,WAAD,EAAcC,IAAI,CAACC,GAAL,EAAd,CAAD,CAAT;AACH,KAFM,MAEA,IAAIL,SAAJ,EAAe;AAClBR,MAAAA,SAAS,CAAC,CAAC,CAAD,EAAGQ,SAAH,CAAD,CAAT;AACH;AACJ,GAhBQ,EAgBN,CAACN,QAAD,EAAWE,MAAX,CAhBM,CAAT;AAkBA,sBACI;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAGF,QAHZ;AAGuB,MAAA,QAAQ,EACtBY,CAAD,IAAO;AACT;AACMX,QAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AAPT;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAGZ,MAHZ;AAGqB,MAAA,QAAQ,EACpBU,CAAD,IAAO;AACP;AACIT,QAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH;AAPT;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7CD;;GAAMnB,gB;;KAAAA,gB;AA+CN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { DateTime } from 'luxon'\r\n\r\nconst DateColumnFilter = ({column}) => {\r\n    const {filterValue, setFilter, preFilteredRows} = column\r\n    const [dateFrom, setDateFrom] = useState('')\r\n    const [dateTo, setDateTo] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log(dateTo)\r\n        console.log(dateFrom)\r\n\r\n        const newDateTo = DateTime.fromFormat(dateTo, 'yyyy-MM-dd').toMillis()\r\n        console.log(newDateTo)\r\n        const newDateFrom = DateTime.fromFormat(dateFrom, 'yyyy-MM-dd').toMillis()\r\n        console.log(newDateFrom)\r\n\r\n        if(newDateFrom && newDateTo) {\r\n            setFilter([newDateFrom, newDateTo])\r\n        } else if (newDateFrom){\r\n            setFilter([newDateFrom, Date.now()])\r\n        } else if (newDateTo) {\r\n            setFilter([0,newDateTo])\r\n        }\r\n    }, [dateFrom, dateTo])\r\n\r\n    return (\r\n        <div>\r\n            <Form.Control \r\n                type=\"date\" \r\n                name=\"date-from\" \r\n                value={ dateFrom } onChange={\r\n                    (e) => {\r\n                  //      setDateFrom(DateTime.fromFormat(e.target.value, 'yyyy-MM-dd').toMillis())\r\n                        setDateFrom(e.target.value)\r\n                    }}\r\n            />\r\n            <Form.Control \r\n                type=\"date\" \r\n                name=\"date-to\" \r\n                value={ dateTo } onChange={\r\n                    (e) => {\r\n                    //    setDateTo(DateTime.fromFormat(e.target.value, 'yyyy-MM-dd').toMillis())\r\n                        setDateTo(e.target.value)\r\n                    }}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateColumnFilter\r\n"]},"metadata":{},"sourceType":"module"}