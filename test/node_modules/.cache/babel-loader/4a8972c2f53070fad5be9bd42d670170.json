{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/Page.css\";\nimport \"../../styles/Dashboard.css\";\nimport isEqual from \"lodash.isequal\";\nimport Tabela from \"../Tabela\";\nimport ManagerTable from \"../ManagerTable\";\nimport { Link } from \"react-router-dom\";\nimport TextColumnFilter from \"../TextColumnFilter\";\nimport DateColumnFilter from \"../DateColumnFilter\";\nimport SelectStageColumnFilter from \"../SelectStageColumnFilter\";\nimport SelectContactColumnFilter from \"../SelectContactColumnFilter\";\nimport { FunnelChart } from \"react-funnel-pipeline\";\nimport \"react-funnel-pipeline/dist/index.css\";\nimport { DateTime } from \"luxon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { numberFormat } from \"../NumberFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: \"Stage\",\n  accessor: \"stage\",\n  Cell: ({\n    value\n  }) => \"\",\n  Filter: SelectStageColumnFilter\n}, {\n  Header: \"First name\",\n  accessor: \"first_name\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Last name\",\n  accessor: \"last_name\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Title\",\n  accessor: \"title\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Phone\",\n  accessor: \"phone\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Email\",\n  accessor: \"email\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Contact method\",\n  accessor: \"contact_method\",\n  Filter: SelectContactColumnFilter\n}, {\n  Header: \"Company\",\n  accessor: \"company\",\n  Filter: TextColumnFilter\n}, {\n  Header: \"Deal size\",\n  accessor: \"deal_size\",\n  //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\n  Cell: ({\n    value\n  }) => numberFormat(value),\n  Filter: DateColumnFilter\n}, {\n  Header: \"Follow Up Date\",\n  accessor: \"follow_up_date\",\n  //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\n  Cell: ({\n    value\n  }) => {\n    const date = DateTime.fromFormat(value, \"yyyy-MM-dd HH:mm:ss\").toFormat(\"MM/dd/yyyy\");\n\n    if (date === \"Invalid DateTime\") {\n      return \"/\";\n    }\n\n    return date;\n  },\n  Filter: DateColumnFilter\n}, {\n  Header: \"\",\n  accessor: \"id\",\n  //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\n  Cell: ({\n    value\n  }) => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/EditContact/${value}`,\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 26\n  }, this),\n  Filter: DateColumnFilter\n}];\nconst managerColumns = [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Email\",\n  accessor: \"email\"\n}, {\n  Header: \"Role\",\n  accessor: \"role\"\n}, {\n  Header: \"Status\",\n  accessor: \"status\"\n}]; //[\n// {\n//     Header: 'Leads',\n//     columns:\n\nconst Dashboard = ({\n  stages,\n  contacts,\n  role,\n  staff\n}) => {\n  _s();\n\n  const [staffContacts, setStaffContacts] = useState([]);\n  let table;\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    if (role !== \"\" && role !== \"manager\") {\n      const staffId = window.localStorage.getItem(\"staff_id\");\n      let filter = contacts.filter(e => e.staff_id == staffId);\n\n      if (!isEqual(filter, staffContacts)) {\n        const data = filter.reduce((acumulator, currentValue) => {\n          const oldValue = acumulator[currentValue.stage] || 0;\n          return { ...acumulator,\n            [currentValue.stage]: oldValue + currentValue.deal_size\n          };\n        }, {}); //  console.log(data);\n\n        const chartDataArray = Object.keys(data).map(key => ({\n          name: key,\n          value: data[key]\n        })); //  console.log(chartDataArray);\n\n        setChartData(chartDataArray);\n        setStaffContacts(filter);\n      }\n    } else if (role === \"manager\") {\n      //     console.log(contacts);\n      const data = contacts.reduce((acumulator, currentValue) => {\n        const oldValue = acumulator[currentValue.stage] || 0;\n        return { ...acumulator,\n          [currentValue.stage]: oldValue + currentValue.deal_size\n        };\n      }, {});\n      console.log(data);\n      const chartDataArray = Object.keys(data).map(key => ({\n        name: key,\n        value: data[key]\n      }));\n      console.log(contacts);\n      if (!isEqual(chartData, chartDataArray)) setChartData(chartDataArray); // setStaffContacts(filter);\n    }\n  }, [chartData, contacts, role, staffContacts, stages]);\n\n  if (role !== \"\" && role === \"manager\") {\n    table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n      columns: managerColumns,\n      data: staff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (role !== \"\" && role !== \"manager\") {\n    table = /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: staffContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"My Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"funnel-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Pipeline By Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FunnelChart, {\n        data: chartData,\n        className: \"funnel-chart\",\n        showRunningTotal: false,\n        chartWidth: 400,\n        chartHeight: 300,\n        heightRelativeToValue: true,\n        pallette: [\"#95db93\", \"#93dbd5\", \"#967ceb\", \"#93aadb\"],\n        showNames: false,\n        showValues: false,\n        getToolTip: row => row.name + \"\\n\" + numberFormat(row.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), \"1. Prospect (10%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), \"2. Forecast (50%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), \"3. Forecast (80%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircle,\n            className: \"circle-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), \"4. Won/Closed (100%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), table]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"rh1nNneKO16xrXk7jjnztDweIho=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","isEqual","Tabela","ManagerTable","Link","TextColumnFilter","DateColumnFilter","SelectStageColumnFilter","SelectContactColumnFilter","FunnelChart","DateTime","FontAwesomeIcon","faCircle","numberFormat","employeeColumns","Header","accessor","Cell","value","Filter","date","fromFormat","toFormat","managerColumns","Dashboard","stages","contacts","role","staff","staffContacts","setStaffContacts","table","chartData","setChartData","staffId","window","localStorage","getItem","filter","e","staff_id","data","reduce","acumulator","currentValue","oldValue","stage","deal_size","chartDataArray","Object","keys","map","key","name","console","log","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/Page.css\";\r\nimport \"../../styles/Dashboard.css\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport Tabela from \"../Tabela\";\r\nimport ManagerTable from \"../ManagerTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextColumnFilter from \"../TextColumnFilter\";\r\nimport DateColumnFilter from \"../DateColumnFilter\";\r\nimport SelectStageColumnFilter from \"../SelectStageColumnFilter\";\r\nimport SelectContactColumnFilter from \"../SelectContactColumnFilter\";\r\nimport { FunnelChart } from \"react-funnel-pipeline\";\r\nimport \"react-funnel-pipeline/dist/index.css\";\r\nimport { DateTime } from \"luxon\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { numberFormat } from \"../NumberFormat\";\r\n\r\nconst employeeColumns = [\r\n  {\r\n    Header: \"Stage\",\r\n    accessor: \"stage\",\r\n    Cell: ({ value }) => \"\",\r\n    Filter: SelectStageColumnFilter,\r\n  },\r\n  {\r\n    Header: \"First name\",\r\n    accessor: \"first_name\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Last name\",\r\n    accessor: \"last_name\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Title\",\r\n    accessor: \"title\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Phone\",\r\n    accessor: \"phone\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Email\",\r\n    accessor: \"email\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Contact method\",\r\n    accessor: \"contact_method\",\r\n    Filter: SelectContactColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Company\",\r\n    accessor: \"company\",\r\n    Filter: TextColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Deal size\",\r\n    accessor: \"deal_size\",\r\n    //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\r\n    Cell: ({ value }) => numberFormat(value),\r\n    Filter: DateColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Follow Up Date\",\r\n    accessor: \"follow_up_date\",\r\n    //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\r\n    Cell: ({ value }) => {\r\n      const date = DateTime.fromFormat(value, \"yyyy-MM-dd HH:mm:ss\").toFormat(\r\n        \"MM/dd/yyyy\"\r\n      );\r\n      if (date === \"Invalid DateTime\") {\r\n        return \"/\";\r\n      }\r\n      return date;\r\n    },\r\n    Filter: DateColumnFilter,\r\n  },\r\n  {\r\n    Header: \"\",\r\n    accessor: \"id\",\r\n    //  accessor: (originalRow) =>{ console.log(originalRow); return DateTime.fromFormat(originalRow.follow_up_date, 'yyyy-MM-dd HH:mm:ss').toMillis() },\r\n    Cell: ({ value }) => <Link to={`/EditContact/${value}`}>Edit</Link>,\r\n    Filter: DateColumnFilter,\r\n  },\r\n];\r\n\r\nconst managerColumns = [\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\",\r\n  },\r\n  {\r\n    Header: \"Email\",\r\n    accessor: \"email\",\r\n  },\r\n  {\r\n    Header: \"Role\",\r\n    accessor: \"role\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n];\r\n\r\n//[\r\n// {\r\n//     Header: 'Leads',\r\n//     columns:\r\n\r\nconst Dashboard = ({ stages, contacts, role, staff }) => {\r\n  const [staffContacts, setStaffContacts] = useState([]);\r\n\r\n  let table;\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (role !== \"\" && role !== \"manager\") {\r\n      const staffId = window.localStorage.getItem(\"staff_id\");\r\n      let filter = contacts.filter((e) => e.staff_id == staffId);\r\n\r\n      if (!isEqual(filter, staffContacts)) {\r\n        const data = filter.reduce((acumulator, currentValue) => {\r\n          const oldValue = acumulator[currentValue.stage] || 0;\r\n          return {\r\n            ...acumulator,\r\n            [currentValue.stage]: oldValue + currentValue.deal_size,\r\n          };\r\n        }, {});\r\n        //  console.log(data);\r\n        const chartDataArray = Object.keys(data).map((key) => ({\r\n          name: key,\r\n          value: data[key],\r\n        }));\r\n        //  console.log(chartDataArray);\r\n        setChartData(chartDataArray);\r\n        setStaffContacts(filter);\r\n      }\r\n    } else if (role === \"manager\") {\r\n      //     console.log(contacts);\r\n\r\n      const data = contacts.reduce((acumulator, currentValue) => {\r\n        const oldValue = acumulator[currentValue.stage] || 0;\r\n        return {\r\n          ...acumulator,\r\n          [currentValue.stage]: oldValue + currentValue.deal_size,\r\n        };\r\n      }, {});\r\n      console.log(data);\r\n      const chartDataArray = Object.keys(data).map((key) => ({\r\n        name: key,\r\n        value: data[key],\r\n      }));\r\n      console.log(contacts);\r\n      if (!isEqual(chartData, chartDataArray)) setChartData(chartDataArray);\r\n      // setStaffContacts(filter);\r\n    }\r\n  }, [chartData, contacts, role, staffContacts, stages]);\r\n\r\n  if (role !== \"\" && role === \"manager\") {\r\n    table = <ManagerTable columns={managerColumns} data={staff}></ManagerTable>;\r\n  }\r\n  if (role !== \"\" && role !== \"manager\") {\r\n    table = <Tabela columns={employeeColumns} data={staffContacts} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h5>My Pipeline</h5>\r\n      <div className=\"funnel-chart-container\">\r\n        <h5>Pipeline By Stage</h5>\r\n        <FunnelChart\r\n          data={chartData}\r\n          className=\"funnel-chart\"\r\n          showRunningTotal={false}\r\n          chartWidth={400}\r\n          chartHeight={300}\r\n          heightRelativeToValue={true}\r\n          pallette={[\"#95db93\", \"#93dbd5\", \"#967ceb\", \"#93aadb\"]}\r\n          showNames={false}\r\n          showValues={false}\r\n          getToolTip={(row) => row.name + \"\\n\" + numberFormat(row.value)}\r\n        />\r\n        <div className=\"chart-legend\">\r\n          <h5>Stage</h5>\r\n\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-1\"\r\n            ></FontAwesomeIcon>\r\n            1. Prospect (10%)\r\n          </p>\r\n\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-2\"\r\n            ></FontAwesomeIcon>\r\n            2. Forecast (50%)\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-3\"\r\n            ></FontAwesomeIcon>\r\n            3. Forecast (80%)\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              className=\"circle-4\"\r\n            ></FontAwesomeIcon>\r\n            4. Won/Closed (100%)\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {table}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}