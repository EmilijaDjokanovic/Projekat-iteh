{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../../styles/Page.css';\nimport isEqual from 'lodash.isequal';\nimport Tabela from '../Tabela';\nimport ManagerTable from '../ManagerTable';\nimport { Link } from 'react-router-dom';\nimport TextColumnFilter from '../TextColumnFilter';\nimport SelectColumnFilter from '../SelectStageColumnFilter';\nimport DateColumnFilter from '../DateColumnFilter';\nimport { ReactTableDefaults } from 'react-table';\nimport SelectStageColumnFilter from '../SelectStageColumnFilter';\nimport SelectContactColumnFilter from '../SelectContactColumnFilter';\nimport CanvasJSReact from '../../lib/canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: 'Stage',\n  accessor: 'stage',\n  Filter: SelectStageColumnFilter\n}, {\n  Header: 'First name',\n  accessor: 'first_name',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Last name',\n  accessor: 'last_name',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Title',\n  accessor: 'title',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Phone',\n  accessor: 'phone',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Email',\n  accessor: 'email',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Contact method',\n  accessor: 'contact_method',\n  Filter: SelectContactColumnFilter\n}, {\n  Header: 'Company',\n  accessor: 'company',\n  Filter: TextColumnFilter\n}, {\n  Header: 'Follow Up Date',\n  accessor: 'follow_up_date',\n  Filter: DateColumnFilter\n}];\nconst managerColumns = [{\n  Header: 'Name',\n  accessor: 'name'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Role',\n  accessor: 'role'\n}, {\n  Header: 'Status',\n  accessor: 'status'\n}]; //[\n// {\n//     Header: 'Leads',\n//     columns: \n\nconst Dashboard = ({\n  stages,\n  contacts,\n  role,\n  staff\n}) => {\n  _s();\n\n  const [staffContacts, setStaffContacts] = useState([]);\n  let table;\n  var dataPoint;\n  var total;\n  const options = {\n    animationEnabled: true,\n    title: {\n      text: 'Sales analysis'\n    },\n    data: [{\n      type: \"funnel\",\n      toolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\n      indexLabelPlacement: \"inside\",\n      indexLabel: \"{label} ({percentage}%)\",\n      dataPoints: [{\n        y: 1400,\n        label: \"Prospects\"\n      }, {\n        y: 1212,\n        label: \"Qualified Prospects\"\n      }, {\n        y: 1080,\n        label: \"Proposals\"\n      }, {\n        y: 665,\n        label: \"Negotiation\"\n      }, {\n        y: 578,\n        label: \"Final Sales\"\n      }]\n    }]\n  };\n  dataPoint = options.data[0].dataPoints;\n  total = dataPoint[0].y;\n\n  for (var i = 0; i < dataPoint.length; i++) {\n    if (i == 0) {\n      options.data[0].dataPoints[i].percentage = 100;\n    } else {\n      options.data[0].dataPoints[i].percentage = (dataPoint[i].y / total * 100).toFixed(2);\n    }\n  }\n\n  useEffect(() => {\n    if (role !== '' && role !== 'manager') {\n      const staffId = window.localStorage.getItem('staff_id');\n      let filter = contacts.filter(e => e.staff_id == staffId);\n\n      if (!isEqual(filter, staffContacts)) {\n        setStaffContacts(filter);\n      } else if (role === 'manager') {}\n    }\n  }, [contacts, role, staffContacts]);\n\n  if (role !== '' && role === 'manager') {\n    table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n      columns: managerColumns,\n      data: staff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (role !== '' && role !== 'manager') {\n    table = /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: staffContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"n0KC+Uz5/Wz8zn4143J8YH4ivhI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","useMemo","isEqual","Tabela","ManagerTable","Link","TextColumnFilter","SelectColumnFilter","DateColumnFilter","ReactTableDefaults","SelectStageColumnFilter","SelectContactColumnFilter","CanvasJSReact","employeeColumns","Header","accessor","Filter","managerColumns","Dashboard","stages","contacts","role","staff","staffContacts","setStaffContacts","table","dataPoint","total","options","animationEnabled","title","text","data","type","toolTipContent","indexLabelPlacement","indexLabel","dataPoints","y","label","i","length","percentage","toFixed","staffId","window","localStorage","getItem","filter","e","staff_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport '../../styles/Page.css'\r\nimport isEqual from 'lodash.isequal'\r\nimport Tabela from '../Tabela'\r\nimport ManagerTable from '../ManagerTable'\r\nimport { Link } from 'react-router-dom'\r\nimport TextColumnFilter from '../TextColumnFilter'\r\nimport SelectColumnFilter from '../SelectStageColumnFilter'\r\nimport DateColumnFilter from '../DateColumnFilter'\r\nimport { ReactTableDefaults } from 'react-table'\r\nimport SelectStageColumnFilter from '../SelectStageColumnFilter'\r\nimport SelectContactColumnFilter from '../SelectContactColumnFilter'\r\nimport CanvasJSReact from '../../lib/canvasjs.react'\r\n\r\nconst employeeColumns = [\r\n    {\r\n        Header: 'Stage',\r\n        accessor: 'stage',\r\n        Filter: SelectStageColumnFilter,\r\n    },\r\n    {\r\n        Header: 'First name',\r\n        accessor: 'first_name',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Last name',\r\n        accessor: 'last_name',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Phone',\r\n        accessor: 'phone',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Contact method',\r\n        accessor: 'contact_method',\r\n        Filter: SelectContactColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Company',\r\n        accessor: 'company',\r\n        Filter: TextColumnFilter,\r\n    },\r\n    {\r\n        Header: 'Follow Up Date',\r\n        accessor: 'follow_up_date',\r\n        Filter: DateColumnFilter,\r\n    },\r\n\r\n]\r\n\r\nconst managerColumns = [\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Role',\r\n            accessor: 'role'\r\n        },\r\n        {\r\n            Header: 'Status',\r\n            accessor: 'status'\r\n        },\r\n    ]\r\n\r\n//[\r\n    // {\r\n    //     Header: 'Leads',\r\n    //     columns: \r\n\r\nconst Dashboard = ({stages, contacts, role, staff}) => {\r\n\r\n    const[staffContacts, setStaffContacts] = useState([])\r\n\r\n    let table;\r\n\r\n    var dataPoint;\r\n    var total;\r\n    const options = {\r\n        animationEnabled: true,\r\n        title: {\r\n            text: 'Sales analysis'\r\n        }, \r\n        data: [{\r\n            type: \"funnel\",\r\n            toolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\r\n            indexLabelPlacement: \"inside\",\r\n            indexLabel: \"{label} ({percentage}%)\",\r\n            dataPoints: [\r\n                { y: 1400, label: \"Prospects\" },\r\n                { y: 1212, label: \"Qualified Prospects\" },\r\n                { y: 1080, label: \"Proposals\" },\r\n                { y: 665,  label: \"Negotiation\" },\r\n                { y: 578, label: \"Final Sales\" }\r\n            ]            \r\n        }]\r\n    }\r\n\r\n    dataPoint = options.data[0].dataPoints;\r\n    total = dataPoint[0].y\r\n    for(var i = 0; i < dataPoint.length; i++) {\r\n        if(i == 0) {\r\n            options.data[0].dataPoints[i].percentage = 100;\r\n        } else {\r\n            options.data[0].dataPoints[i].percentage = ((dataPoint[i].y / total) * 100).toFixed(2);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(role !== '' && role !== 'manager') {\r\n            const staffId = window.localStorage.getItem('staff_id')\r\n            let filter = contacts.filter((e) => (e.staff_id == staffId))\r\n            if(!isEqual(filter, staffContacts)) {\r\n                setStaffContacts(filter)\r\n            } else if(role === 'manager'){\r\n                \r\n            }\r\n        }\r\n    },[contacts, role, staffContacts])\r\n\r\n\r\n    if(role !== '' && role === 'manager') {\r\n        table = <ManagerTable columns={managerColumns} data={staff}></ManagerTable>\r\n    }\r\n    if(role !== '' && role !== 'manager') {\r\n        table =  <Tabela columns={employeeColumns} data={staffContacts} />\r\n    }\r\n\r\n\r\n\r\n \r\n\r\n    return (\r\n        <div className='container'>\r\n            {table}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}