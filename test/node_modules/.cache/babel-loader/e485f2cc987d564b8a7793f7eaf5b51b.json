{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./Components/Header\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Pages/Login\";\nimport Dashboard from \"./Components/Pages/Dashboard\";\nimport NewLead from \"./Components/Pages/NewLead\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport RegisterUser from \"./Components/Pages/RegisterUser\";\nimport ManageEmployee from \"./Components/Pages/ManageEmployee\";\nimport isEqual from \"lodash.isequal\";\nimport EditContact from \"./Components/Pages/EditContact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api\"\n});\nconst timeApi = axios.create({\n  baseUrl: \"http://worldtimeapi.org/api\"\n});\n\nconst App = () => {\n  _s();\n\n  const [stages, setStages] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [refresh, setRefresh] = useState(false); // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem(\"role\");\n    if (role !== storedRole && storedRole) setRole(storedRole);\n\n    if (role === \"manager\") {\n      setUserType(\"Manager view\");\n    } else if (role === \"sales\") {\n      setUserType(\"Employee view\");\n    } else {\n      setUserType(\"\");\n    }\n\n    if (role !== \"\") {\n      setRefresh(false);\n      const apiToken = window.localStorage.getItem(\"api_token\");\n      const staffId = window.localStorage.getItem(\"staff_id\");\n      api.get(`/contacts/detailed`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (!isEqual(res.data, contacts)) {\n          setContacts(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n\n      if (role === \"manager\") {\n        api.get(`/staff`, {\n          headers: {\n            token: apiToken\n          }\n        }).then(res => {\n          res.data.map((staffMember, i) => {\n            res.data[i].deal_size = 0;\n          });\n          res.data.map((staffMember, i) => {\n            let totalDealSize = 0;\n            contacts.map(contact => {\n              if (contact.staff_id === staffMember.id) {\n                // console.log(contact.deal_size);\n                totalDealSize += contact.deal_size; // staff[i].deal_size = 0;\n              }\n            });\n            res.data[i].deal_size = totalDealSize;\n          });\n\n          if (!isEqual(res.data, staff)) {\n            setStaff(res.data);\n          }\n        }).catch(error => {\n          console.log(error.response.data.message);\n        });\n      }\n\n      api.get(`/stages`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, stages)) {\n          setStages(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n      api.get(`/cities`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, cities)) {\n          setCities(res.data);\n        }\n      }).catch(error => {\n        if (error.response.status === 404) {\n          return alert(\"Can't retrieve cities\");\n        }\n      });\n      api.get(`/companies`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (!isEqual(res.data, companies)) {\n          setCompanies(res.data);\n        }\n      }).catch(error => {\n        if (error.response.status === 404) {\n          return alert(\"Can't retrieve companies\");\n        }\n      });\n    }\n  }, [role, contacts, staff, stages, refresh, cities, companies]);\n  let navbar;\n\n  if (role !== \"\") {\n    navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n      role: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userType: userType,\n        setRole: setRole,\n        setUserType: setUserType,\n        timeApi: timeApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), navbar, /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => {\n            return role !== \"\" || role !== null ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          render: () => /*#__PURE__*/_jsxDEV(Login, {\n            api: api,\n            setRole: setRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/Dashboard\",\n          component: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n            stages: stages,\n            setStages: setStages,\n            contacts: contacts,\n            setContacts: setContacts,\n            role: role,\n            staff: staff,\n            setStaff: setStaff\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/NewLead\",\n          component: () => /*#__PURE__*/_jsxDEV(NewLead, {\n            setContacts: setContacts,\n            stages: stages,\n            cities: cities,\n            setCities: setCities,\n            api: api,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/RegisterUser\",\n          component: () => /*#__PURE__*/_jsxDEV(RegisterUser, {\n            api: api,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/EditContact/:id\",\n          component: () => /*#__PURE__*/_jsxDEV(EditContact, {\n            contacts: contacts,\n            stages: stages,\n            cities: cities,\n            setCities: setCities,\n            setContacts: setContacts,\n            companies: companies,\n            setCompanies: setCompanies,\n            api: api,\n            refresh: refresh,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/ManageEmployee/:id\",\n          component: () => /*#__PURE__*/_jsxDEV(ManageEmployee, {\n            contacts: contacts,\n            stages: stages,\n            setContacts: setContacts,\n            api: api,\n            refresh: refresh,\n            setRefresh: setRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sgLkWe8SR/Fw5Ju0KxnoRnfdD2Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/App.js"],"names":["React","useState","useEffect","axios","Header","BrowserRouter","Router","Redirect","Route","Switch","Navbar","Login","Dashboard","NewLead","PrivateRoute","RegisterUser","ManageEmployee","isEqual","EditContact","api","create","baseURL","timeApi","baseUrl","App","stages","setStages","cities","setCities","companies","setCompanies","contacts","setContacts","staff","setStaff","role","setRole","userType","setUserType","refresh","setRefresh","storedRole","window","localStorage","getItem","apiToken","staffId","get","headers","token","then","res","console","log","data","catch","error","response","message","map","staffMember","i","deal_size","totalDealSize","contact","staff_id","id","status","alert","navbar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./Components/Header\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Pages/Login\";\nimport Dashboard from \"./Components/Pages/Dashboard\";\nimport NewLead from \"./Components/Pages/NewLead\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport RegisterUser from \"./Components/Pages/RegisterUser\";\nimport ManageEmployee from \"./Components/Pages/ManageEmployee\";\nimport isEqual from \"lodash.isequal\";\nimport EditContact from \"./Components/Pages/EditContact\";\n\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api\",\n});\n\nconst timeApi = axios.create({\n  baseUrl: \"http://worldtimeapi.org/api\",\n});\n\nconst App = () => {\n  const [stages, setStages] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [companies, setCompanies] = useState([]);\n\n  const [contacts, setContacts] = useState([]);\n\n  const [staff, setStaff] = useState([]);\n\n  const [role, setRole] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [refresh, setRefresh] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedRole = window.localStorage.getItem(\"role\");\n    if (role !== storedRole && storedRole) setRole(storedRole);\n    if (role === \"manager\") {\n      setUserType(\"Manager view\");\n    } else if (role === \"sales\") {\n      setUserType(\"Employee view\");\n    } else {\n      setUserType(\"\");\n    }\n\n    if (role !== \"\") {\n      setRefresh(false);\n      const apiToken = window.localStorage.getItem(\"api_token\");\n      const staffId = window.localStorage.getItem(\"staff_id\");\n\n      api\n        .get(`/contacts/detailed`, { headers: { token: apiToken } })\n        .then((res) => {\n          console.log(res.data);\n          if (!isEqual(res.data, contacts)) {\n            setContacts(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response.data.message);\n        });\n\n      if (role === \"manager\") {\n        api\n          .get(`/staff`, { headers: { token: apiToken } })\n          .then((res) => {\n            res.data.map((staffMember, i) => {\n              res.data[i].deal_size = 0;\n            });\n            res.data.map((staffMember, i) => {\n              let totalDealSize = 0;\n              contacts.map((contact) => {\n                if (contact.staff_id === staffMember.id) {\n                  // console.log(contact.deal_size);\n                  totalDealSize += contact.deal_size;\n                  // staff[i].deal_size = 0;\n                }\n              });\n              res.data[i].deal_size = totalDealSize;\n            });\n\n            if (!isEqual(res.data, staff)) {\n              setStaff(res.data);\n            }\n          })\n          .catch((error) => {\n            console.log(error.response.data.message);\n          });\n      }\n      api\n        .get(`/stages`, { headers: { token: apiToken } })\n        .then((res) => {\n          if (!isEqual(res.data, stages)) {\n            setStages(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error.response.data.message);\n        });\n\n      api\n        .get(`/cities`, { headers: { token: apiToken } })\n        .then((res) => {\n          if (!isEqual(res.data, cities)) {\n            setCities(res.data);\n          }\n        })\n        .catch((error) => {\n          if (error.response.status === 404) {\n            return alert(\"Can't retrieve cities\");\n          }\n        });\n\n      api\n        .get(`/companies`, { headers: { token: apiToken } })\n        .then((res) => {\n          console.log(res.data);\n\n          if (!isEqual(res.data, companies)) {\n            setCompanies(res.data);\n          }\n        })\n        .catch((error) => {\n          if (error.response.status === 404) {\n            return alert(\"Can't retrieve companies\");\n          }\n        });\n    }\n  }, [role, contacts, staff, stages, refresh, cities, companies]);\n\n  let navbar;\n  if (role !== \"\") {\n    navbar = <Navbar role={role} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header\n          userType={userType}\n          setRole={setRole}\n          setUserType={setUserType}\n          timeApi={timeApi}\n        />\n        {navbar}\n        <Switch>\n          <Route\n            path=\"/\"\n            exact={true}\n            render={() => {\n              return role !== \"\" || role !== null ? (\n                <Redirect to=\"/Dashboard\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route\n            path=\"/Login\"\n            render={() => <Login api={api} setRole={setRole} />}\n          />\n          <PrivateRoute\n            path=\"/Dashboard\"\n            component={() => (\n              <Dashboard\n                stages={stages}\n                setStages={setStages}\n                contacts={contacts}\n                setContacts={setContacts}\n                role={role}\n                staff={staff}\n                setStaff={setStaff}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/NewLead\"\n            component={() => (\n              <NewLead\n                setContacts={setContacts}\n                stages={stages}\n                cities={cities}\n                setCities={setCities}\n                api={api}\n                setRefresh={setRefresh}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/RegisterUser\"\n            component={() => <RegisterUser api={api} setRefresh={setRefresh} />}\n          />\n          <PrivateRoute\n            path=\"/EditContact/:id\"\n            component={() => (\n              <EditContact\n                contacts={contacts}\n                stages={stages}\n                cities={cities}\n                setCities={setCities}\n                setContacts={setContacts}\n                companies={companies}\n                setCompanies={setCompanies}\n                api={api}\n                refresh={refresh}\n                setRefresh={setRefresh}\n              />\n            )}\n          />\n          <PrivateRoute\n            path=\"/ManageEmployee/:id\"\n            component={() => (\n              <ManageEmployee\n                contacts={contacts}\n                stages={stages}\n                setContacts={setContacts}\n                api={api}\n                refresh={refresh}\n                setRefresh={setRefresh}\n              />\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}