{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../../styles/Page.css';\nimport isEqual from 'lodash.isequal';\nimport Tabela from '../Tabela';\nimport ManagerTable from '../ManagerTable';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employeeColumns = [{\n  Header: 'First name',\n  accessor: 'first_name'\n}, {\n  Header: 'Last name',\n  accessor: 'last_name'\n}, {\n  Header: 'Title',\n  accessor: 'title'\n}, {\n  Header: 'Phone',\n  accessor: 'phone'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Contact method',\n  accessor: 'contact_method'\n}, {\n  Header: 'Company',\n  accessor: 'company'\n}, {\n  Header: 'Stage',\n  accessor: 'stage'\n}, {\n  Header: 'Employee',\n  accessor: 'name'\n}];\nconst managerColumns = [{\n  Header: 'Name',\n  accessor: 'name'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}, {\n  Header: 'Role',\n  accessor: 'role'\n}, {\n  Header: 'Status',\n  accessor: 'status'\n}]; //[\n// {\n//     Header: 'Leads',\n//     columns: \n\nconst Dashboard = ({\n  api,\n  stages,\n  setStages,\n  contacts,\n  setContacts,\n  role,\n  staff,\n  setStaff\n}) => {\n  _s();\n\n  const [staffContacts, setStaffContacts] = useState([]);\n  let table;\n  useEffect(() => {\n    const staffId = window.localStorage.getItem('staff_id');\n    let filter = contacts.filter(e => e.staff_id == staffId);\n\n    if (!isEqual(filter, staffContacts)) {\n      setStaffContacts(filter);\n    }\n  }, [contacts, staffContacts]);\n\n  if (role !== '' && role === 'manager') {\n    table = /*#__PURE__*/_jsxDEV(ManagerTable, {\n      columns: managerColumns,\n      data: staff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (role !== '' && role !== 'manager') {\n    table = /*#__PURE__*/_jsxDEV(Tabela, {\n      columns: employeeColumns,\n      data: staffContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"n0KC+Uz5/Wz8zn4143J8YH4ivhI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","useMemo","isEqual","Tabela","ManagerTable","Link","employeeColumns","Header","accessor","managerColumns","Dashboard","api","stages","setStages","contacts","setContacts","role","staff","setStaff","staffContacts","setStaffContacts","table","staffId","window","localStorage","getItem","filter","e","staff_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport '../../styles/Page.css'\r\nimport isEqual from 'lodash.isequal'\r\nimport Tabela from '../Tabela'\r\nimport ManagerTable from '../ManagerTable'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst employeeColumns = [\r\n                {\r\n                    Header: 'First name',\r\n                    accessor: 'first_name'\r\n                },\r\n                {\r\n                    Header: 'Last name',\r\n                    accessor: 'last_name'\r\n                },\r\n                {\r\n                    Header: 'Title',\r\n                    accessor: 'title'\r\n                },\r\n                {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone'\r\n                },\r\n                {\r\n                    Header: 'Email',\r\n                    accessor: 'email'\r\n                },\r\n                {\r\n                    Header: 'Contact method',\r\n                    accessor: 'contact_method'\r\n                },\r\n                {\r\n                    Header: 'Company',\r\n                    accessor: 'company'\r\n                },\r\n                {\r\n                    Header: 'Stage',\r\n                    accessor: 'stage'\r\n                },\r\n                {\r\n                    Header: 'Employee',\r\n                    accessor: 'name'\r\n                },\r\n            ]\r\n\r\nconst managerColumns = [\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Role',\r\n            accessor: 'role'\r\n        },\r\n        {\r\n            Header: 'Status',\r\n            accessor: 'status'\r\n        },\r\n    ]\r\n\r\n//[\r\n    // {\r\n    //     Header: 'Leads',\r\n    //     columns: \r\n\r\nconst Dashboard = ({api, stages, setStages, contacts, setContacts, role, staff, setStaff}) => {\r\n\r\n    const[staffContacts, setStaffContacts] = useState([])\r\n\r\n    let table;\r\n    \r\n\r\n    useEffect(() => {\r\n        const staffId = window.localStorage.getItem('staff_id')\r\n        let filter = contacts.filter((e) => (e.staff_id == staffId))\r\n        if(!isEqual(filter, staffContacts)) {\r\n            setStaffContacts(filter)\r\n        }\r\n    },[contacts, staffContacts])\r\n\r\n\r\n    if(role !== '' && role === 'manager') {\r\n        table = <ManagerTable columns={managerColumns} data={staff}></ManagerTable>\r\n    }\r\n    if(role !== '' && role !== 'manager') {\r\n        table =  <Tabela columns={employeeColumns} data={staffContacts} />\r\n    }\r\n\r\n \r\n\r\n    return (\r\n        <div className='container'>\r\n            {table}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}