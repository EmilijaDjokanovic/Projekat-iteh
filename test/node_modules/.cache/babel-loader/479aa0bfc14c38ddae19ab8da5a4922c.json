{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../../styles/Page.css';\nimport isEqual from 'lodash.isequal';\nimport Tabela from '../Tabela';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  api,\n  stage,\n  setStage,\n  contacts,\n  setContacts,\n  isLoggedIn,\n  role\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const apiToken = window.localStorage.getItem('api_token');\n      api.get(`/contacts`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, contacts)) {\n          setContacts(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n      api.get(`/stages`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        if (!isEqual(res.data, contacts)) {\n          setStage(res.data);\n        }\n      }).catch(error => {\n        console.log(error.response.data.message);\n      });\n    }\n  }, [contacts, stage]);\n  const employeeColumns = useMemo(() => [{\n    Header: 'cmar',\n    columns: [{\n      Header: 'Stage',\n      accessor: 'stage_id'\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"IvX/XXtJlaHiAQ6gra2ImiESKrU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/Dashboard.js"],"names":["React","useState","useEffect","useMemo","isEqual","Tabela","Dashboard","api","stage","setStage","contacts","setContacts","isLoggedIn","role","apiToken","window","localStorage","getItem","get","headers","token","then","res","data","catch","error","console","log","response","message","employeeColumns","Header","columns","accessor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,WAAjC;AAA8CC,EAAAA,UAA9C;AAA0DC,EAAAA;AAA1D,CAAD,KAAqE;AAAA;;AAEnFX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,UAAH,EAAe;AACP,YAAME,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAjB;AACAV,MAAAA,GAAG,CAACW,GAAJ,CAAS,WAAT,EAAqB;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEN;AAAR;AAAV,OAArB,EAAmDO,IAAnD,CAAwDC,GAAG,IAAI;AAC3D,YAAG,CAAClB,OAAO,CAACkB,GAAG,CAACC,IAAL,EAAWb,QAAX,CAAX,EAAiC;AAC7BC,UAAAA,WAAW,CAACW,GAAG,CAACC,IAAL,CAAX;AACH;AACA,OAJL,EAIOC,KAJP,CAIaC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBM,OAAhC;AACH,OANL;AAOItB,MAAAA,GAAG,CAACW,GAAJ,CAAS,SAAT,EAAmB;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEN;AAAR;AAAV,OAAnB,EAAiDO,IAAjD,CAAsDC,GAAG,IAAI;AACzD,YAAG,CAAClB,OAAO,CAACkB,GAAG,CAACC,IAAL,EAAWb,QAAX,CAAX,EAAiC;AAC7BD,UAAAA,QAAQ,CAACa,GAAG,CAACC,IAAL,CAAR;AACH;AACA,OAJL,EAIOC,KAJP,CAIaC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBM,OAAhC;AACH,OANL;AAOH;AACZ,GAlBQ,EAkBP,CAACnB,QAAD,EAAWF,KAAX,CAlBO,CAAT;AAoBA,QAAMsB,eAAe,GAAG3B,OAAO,CAC3B,MAAM,CACF;AACI4B,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,OAAO,EAAE,CACL;AACID,MAAAA,MAAM,EAAE,OADZ;AAEIE,MAAAA,QAAQ,EAAE;AAFd,KADK;AAFb,GADE,CADqB,CAA/B;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3CD;;GAAM3B,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport '../../styles/Page.css'\r\nimport isEqual from 'lodash.isequal'\r\nimport Tabela from '../Tabela'\r\n\r\n\r\nconst Dashboard = ({api, stage, setStage, contacts, setContacts, isLoggedIn, role}) => {\r\n\r\n    useEffect(() => {\r\n        if(isLoggedIn) {\r\n                const apiToken = window.localStorage.getItem('api_token') \r\n                api.get(`/contacts`, {headers: {token: apiToken}}).then(res => {\r\n                    if(!isEqual(res.data, contacts)) {\r\n                        setContacts(res.data)\r\n                    }        \r\n                    }).catch(error => {\r\n                        console.log(error.response.data.message)\r\n                    })\r\n                    api.get(`/stages`, {headers: {token: apiToken}}).then(res => {\r\n                        if(!isEqual(res.data, contacts)) {\r\n                            setStage(res.data)\r\n                        }        \r\n                        }).catch(error => {\r\n                            console.log(error.response.data.message)\r\n                        })\r\n                }\r\n    },[contacts, stage])\r\n\r\n    const employeeColumns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'cmar',\r\n                columns: [\r\n                    {\r\n                        Header: 'Stage',\r\n                        accessor: 'stage_id'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    )\r\n \r\n\r\n    return (\r\n        <div className='container'>\r\n            {/* {contacts[0].first_name} */}\r\n            {/* <Tabela columns={employeeColumns} data={contacts} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}