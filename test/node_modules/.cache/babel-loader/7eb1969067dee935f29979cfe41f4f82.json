{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\DateColumnFilter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DateColumnFilter = ({\n  column\n}) => {\n  _s();\n\n  const {\n    filterValue = [],\n    setFilter,\n    preFilteredRows,\n    id\n  } = column;\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach(row => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        name: \"follow-up-from\",\n        value: filterValue[0] || '',\n        onChange: e => {\n          setFilter((old = []) => [e.target.value || undefined]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        name: \"follow-up-to\",\n        value: filterValue[1] || '',\n        onChange: e => {\n          setFilter((old = []) => [old[0], e.target.value || undefined]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), console.log(min)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DateColumnFilter, \"JjGt0968bxIn2DIWJAwn7XKKSys=\");\n\n_c = DateColumnFilter;\nexport default DateColumnFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateColumnFilter\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/DateColumnFilter.js"],"names":["React","Form","DateColumnFilter","column","filterValue","setFilter","preFilteredRows","id","min","max","useMemo","length","values","forEach","row","Math","e","old","target","value","undefined","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACnC,QAAM;AAACC,IAAAA,WAAW,GAAG,EAAf;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,eAA9B;AAA+CC,IAAAA;AAA/C,MAAqDJ,MAA3D;AACA,QAAM,CAACK,GAAD,EAAMC,GAAN,IAAaT,KAAK,CAACU,OAAN,CAAc,MAAM;AACnC,QAAIF,GAAG,GAAGF,eAAe,CAACK,MAAhB,GAAyBL,eAAe,CAAC,CAAD,CAAf,CAAmBM,MAAnB,CAA0BL,EAA1B,CAAzB,GAAyD,CAAnE;AACA,QAAIE,GAAG,GAAGH,eAAe,CAACK,MAAhB,GAAyBL,eAAe,CAAC,CAAD,CAAf,CAAmBM,MAAnB,CAA0BL,EAA1B,CAAzB,GAAyD,CAAnE;AACAD,IAAAA,eAAe,CAACO,OAAhB,CAAwBC,GAAG,IAAI;AAC7BN,MAAAA,GAAG,GAAGO,IAAI,CAACP,GAAL,CAASM,GAAG,CAACF,MAAJ,CAAWL,EAAX,CAAT,EAAyBC,GAAzB,CAAN;AACAC,MAAAA,GAAG,GAAGM,IAAI,CAACN,GAAL,CAASK,GAAG,CAACF,MAAJ,CAAWL,EAAX,CAAT,EAAyBE,GAAzB,CAAN;AACD,KAHD;AAIA,WAAO,CAACD,GAAD,EAAMC,GAAN,CAAP;AACD,GARgB,EAQd,CAACF,EAAD,EAAKD,eAAL,CARc,CAAnB;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACgB,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,gBAFT;AAGI,QAAA,KAAK,EAAEF,WAAW,CAAC,CAAD,CAAX,IAAkB,EAH7B;AAGiC,QAAA,QAAQ,EAAGY,CAAD,IAAO;AAACX,UAAAA,SAAS,CAAC,CAACY,GAAG,GAAG,EAAP,KAAa,CAACD,CAAC,CAACE,MAAF,CAASC,KAAT,IAAkBC,SAAnB,CAAd,CAAT;AAAsD;AAHzG;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,cAFT;AAGI,QAAA,KAAK,EAAEhB,WAAW,CAAC,CAAD,CAAX,IAAkB,EAH7B;AAGiC,QAAA,QAAQ,EAAGY,CAAD,IAAO;AAACX,UAAAA,SAAS,CAAC,CAACY,GAAG,GAAG,EAAP,KAAa,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASD,CAAC,CAACE,MAAF,CAASC,KAAT,IAAkBC,SAA3B,CAAd,CAAT;AAA8D;AAHjH;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKC,OAAO,CAACC,GAAR,CAAYd,GAAZ,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAmBH,CA/BD;;GAAMN,gB;;KAAAA,gB;AAiCN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport {Form} from 'react-bootstrap'\r\n\r\nconst DateColumnFilter = ({column}) => {\r\n    const {filterValue = [], setFilter, preFilteredRows, id} = column\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n        preFilteredRows.forEach(row => {\r\n          min = Math.min(row.values[id], min)\r\n          max = Math.max(row.values[id], max)\r\n        })\r\n        return [min, max]\r\n      }, [id, preFilteredRows])\r\n    \r\n    return (\r\n        <>\r\n            <div className='input-container'>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                name=\"follow-up-from\" \r\n                                value={filterValue[0] || ''} onChange={(e) => {setFilter((old = [])=> [e.target.value || undefined])}}\r\n                            />            \r\n            </div>\r\n            <div className='input-container'>\r\n                <Form.Control \r\n                    type=\"date\" \r\n                    name=\"follow-up-to\" \r\n                    value={filterValue[1] || ''} onChange={(e) => {setFilter((old = [])=> [old[0], e.target.value || undefined])}}\r\n                />\r\n                {console.log(min)}            \r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DateColumnFilter\r\n"]},"metadata":{},"sourceType":"module"}