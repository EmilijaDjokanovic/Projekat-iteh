{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\Components\\\\Pages\\\\EditContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport \"../../styles/Page.css\";\nimport isEqual from \"lodash.isequal\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditContact = ({\n  api,\n  setContacts,\n  contacts,\n  stages\n}) => {\n  _s();\n\n  const [contact, setContact] = useState();\n  const {\n    id\n  } = useParams();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [stage, setStage] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  useEffect(() => {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api.get(`/contacts/${id}`, {\n      headers: {\n        token: apiToken\n      }\n    }).then(res => {\n      if (!isEqual(res.data, contact)) {\n        setContact(res.data);\n        fillForm();\n      }\n    }).catch(error => {\n      console.log(error.response.data.message);\n    });\n  }, [api, contact, id]);\n\n  const fillForm = () => {\n    console.log(contact);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(firstName);\n  };\n\n  const onClear = e => {\n    e.preventDefault();\n    console.log(firstName);\n  }; // console.log(contact);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Edit Lead:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"First name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"first-name\",\n            value: firstName,\n            onChange: e => {\n              setFirstName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Last name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"last-name\",\n            value: lastName,\n            onChange: e => {\n              setLastName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"phone\",\n            value: phone,\n            onChange: e => {\n              setPhone(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Stage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"stage\",\n            value: stage,\n            onChange: e => {\n              setStage(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), stages.map(stage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stage.id,\n              children: stage.stage\n            }, stage.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"company\",\n            value: company,\n            onChange: e => {\n              setCompany(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Follow Up Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"follow-up-to\" // value={followUpTo}\n            ,\n            onChange: e => {// setFollowUpTo(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"clear\",\n          onClick: onClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditContact, \"e//anaRA9msFARiBZXVU+FxqY4k=\", false, function () {\n  return [useParams];\n});\n\n_c = EditContact;\nexport default EditContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/Components/Pages/EditContact.js"],"names":["React","useEffect","useState","useParams","isEqual","Form","Button","EditContact","api","setContacts","contacts","stages","contact","setContact","id","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","stage","setStage","company","setCompany","apiToken","window","localStorage","getItem","get","headers","token","then","res","data","fillForm","catch","error","console","log","response","message","onSubmit","e","preventDefault","onClear","target","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AAAA;;AAC9D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASX,SAAS,EAAxB;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAjB;AACAtB,IAAAA,GAAG,CACAuB,GADH,CACQ,aAAYjB,EAAG,EADvB,EAC0B;AAAEkB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEN;AAAT;AAAX,KAD1B,EAEGO,IAFH,CAESC,GAAD,IAAS;AACb,UAAI,CAAC/B,OAAO,CAAC+B,GAAG,CAACC,IAAL,EAAWxB,OAAX,CAAZ,EAAiC;AAC/BC,QAAAA,UAAU,CAACsB,GAAG,CAACC,IAAL,CAAV;AACAC,QAAAA,QAAQ;AACT;AACF,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeN,IAAf,CAAoBO,OAAhC;AACD,KAVH;AAWD,GAbQ,EAaN,CAACnC,GAAD,EAAMI,OAAN,EAAeE,EAAf,CAbM,CAAT;;AAeA,QAAMuB,QAAQ,GAAG,MAAM;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AACD,GAFD;;AAIA,QAAMgC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY1B,SAAZ;AACD,GAHD;;AAKA,QAAMgC,OAAO,GAAIF,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY1B,SAAZ;AACD,GAHD,CAnC8D,CAwC9D;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,YAFP;AAGE,YAAA,KAAK,EAAEA,SAHT;AAIE,YAAA,QAAQ,EAAG8B,CAAD,IAAO;AACf7B,cAAAA,YAAY,CAAC6B,CAAC,CAACG,MAAF,CAASC,KAAV,CAAZ;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,KAAK,EAAEhC,QAHT;AAIE,YAAA,QAAQ,EAAG4B,CAAD,IAAO;AACf3B,cAAAA,WAAW,CAAC2B,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE9B,KAHT;AAIE,YAAA,QAAQ,EAAG0B,CAAD,IAAO;AACfzB,cAAAA,QAAQ,CAACyB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAkCE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE5B,KAHT;AAIE,YAAA,QAAQ,EAAGwB,CAAD,IAAO;AACfvB,cAAAA,QAAQ,CAACuB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF,eA6CE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE1B,KAHT;AAIE,YAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfrB,cAAAA,QAAQ,CAACqB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD,aANH;AAAA,oCAQE;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASGtC,MAAM,CAACuC,GAAP,CAAY3B,KAAD,iBACV;AAAuB,cAAA,KAAK,EAAEA,KAAK,CAACT,EAApC;AAAA,wBACGS,KAAK,CAACA;AADT,eAAaA,KAAK,CAACT,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,eA+DE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,KAAK,EAAEW,OAHT;AAIE,YAAA,QAAQ,EAAGoB,CAAD,IAAO;AACfnB,cAAAA,UAAU,CAACmB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAV;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DF,eA0EE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,cAFP,CAGE;AAHF;AAIE,YAAA,QAAQ,EAAGJ,CAAD,IAAO,CACf;AACD;AANH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1EF,eAqFE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArFF,eAwFE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,OAAO,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmGD,CA5ID;;GAAMxC,W;UAEWJ,S;;;KAFXI,W;AA8IN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport \"../../styles/Page.css\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst EditContact = ({ api, setContacts, contacts, stages }) => {\r\n  const [contact, setContact] = useState();\r\n  const { id } = useParams();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [stage, setStage] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const apiToken = window.localStorage.getItem(\"api_token\");\r\n    api\r\n      .get(`/contacts/${id}`, { headers: { token: apiToken } })\r\n      .then((res) => {\r\n        if (!isEqual(res.data, contact)) {\r\n          setContact(res.data);\r\n          fillForm();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  }, [api, contact, id]);\r\n\r\n  const fillForm = () => {\r\n    console.log(contact);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(firstName);\r\n  };\r\n\r\n  const onClear = (e) => {\r\n    e.preventDefault();\r\n    console.log(firstName);\r\n  };\r\n\r\n  // console.log(contact);\r\n  return (\r\n    <div className=\"container\">\r\n      <h5>Edit Lead:</h5>\r\n      <div className=\"form-container\">\r\n        <Form>\r\n          <div className=\"input-container\">\r\n            <p>First name:</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"first-name\"\r\n              value={firstName}\r\n              onChange={(e) => {\r\n                setFirstName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Last name:</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"last-name\"\r\n              value={lastName}\r\n              onChange={(e) => {\r\n                setLastName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Phone:</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={(e) => {\r\n                setPhone(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Email:</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Stage:</p>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"stage\"\r\n              value={stage}\r\n              onChange={(e) => {\r\n                setStage(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\">Select a stage</option>\r\n              {stages.map((stage) => (\r\n                <option key={stage.id} value={stage.id}>\r\n                  {stage.stage}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Company:</p>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              onChange={(e) => {\r\n                setCompany(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <p>Follow Up Date:</p>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"follow-up-to\"\r\n              // value={followUpTo}\r\n              onChange={(e) => {\r\n                // setFollowUpTo(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <Button type=\"submit\" onClick={onSubmit}>\r\n            Accept\r\n          </Button>\r\n          <Button type=\"clear\" onClick={onClear}>\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n"]},"metadata":{},"sourceType":"module"}