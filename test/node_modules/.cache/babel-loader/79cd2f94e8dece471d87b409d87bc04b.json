{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos\\\\Desktop\\\\Faks\\\\test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from 'axios';\nimport Table from './Components/Table';\nimport { Button, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Genres = ({\n  values\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: values.map((genre, idx) => {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        children: genre\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = Genres;\n\nfunction App() {\n  _s();\n\n  const columns = useMemo(() => [{\n    Header: \"TV Show\",\n    columns: [{\n      Header: \"Name\",\n      accessor: \"show.name\"\n    }, {\n      Header: 'Type',\n      accessor: 'show.type'\n    }]\n  }, {\n    Header: \"Details\",\n    columns: [{\n      Header: 'Language',\n      accessor: 'show.language'\n    }, {\n      Header: 'Genre(s)',\n      accessor: 'show.genres',\n      Cell: ({\n        cell: {\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(Genres, {\n        values: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 42\n      }, this)\n    }, {\n      Header: 'runtime',\n      accessor: 'show.runtime',\n      Cell: ({\n        cell: {\n          value\n        }\n      }) => {\n        const hour = Math.floor(value / 60);\n        const min = Math.floor(value % 60);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [hour > 0 ? `${hour} hr${hour > 1 ? \"s\" : \"\"}` : \"\", min > 0 ? `${min} min${min > 1 ? \"s\" : \"\"}` : \"\"]\n        }, void 0, true);\n      }\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }]\n  }], []);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n      variant: \"success\",\n      children: \"asdasda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TYGuL0g4zE67Bs30rnnW+EaJADk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Genres\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/milos/Desktop/Faks/test/test/src/App.js"],"names":["React","useState","useEffect","useMemo","axios","Table","Button","Badge","Genres","values","map","genre","idx","App","columns","Header","accessor","Cell","cell","value","hour","Math","floor","min","data","setData","result"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from 'axios';\nimport Table from './Components/Table'\nimport { Button, Badge } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst Genres = ({ values }) => {\n  return (\n    <>\n      {values.map((genre, idx) => {\n        return (\n          <Badge key={idx}>\n            {genre}\n          </Badge>\n        )\n      })}\n    </>\n  )\n}\n\nfunction App() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"TV Show\",\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"show.name\"\n          },\n          {\n          Header: 'Type',\n          accessor: 'show.type'\n          }\n        ]\n      },\n      {\n        Header: \"Details\",\n        columns: [\n          {\n            Header: 'Language',\n            accessor: 'show.language'\n          },\n          {\n            Header: 'Genre(s)',\n            accessor: 'show.genres',\n            Cell: ({ cell: {value} }) => <Genres values={value} />\n          },\n          {\n          Header: 'runtime',\n          accessor: 'show.runtime',\n          Cell: ({ cell: {value} }) => {\n            const hour = Math.floor(value / 60)\n            const min = Math.floor(value % 60)\n            return (\n              <>\n                {hour > 0 ? `${hour} hr${hour > 1 ? \"s\" : \"\"}` : \"\"}\n                {min > 0 ? `${min} min${min > 1 ? \"s\" : \"\"}` : \"\"}\n              </>\n            )\n          }\n          },\n          {\n            Header: \"Status\",\n            accessor: \"show.status\"\n          }\n        ]\n      }\n    ],\n    []\n  )\n  const [data, setData] = useState([]);\n\n  useEffect(()=> {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })()\n  }, [])\n  return (\n    <div className=\"App\">\n      <Table columns={columns} data={data} />\n      <Button variant=\"primary\">Test</Button>\n      <Badge variant=\"success\">asdasda</Badge>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}